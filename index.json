{
  "api/Swan.Components.DependencyContainerDuplicateImplementationAction.html": {
    "href": "api/Swan.Components.DependencyContainerDuplicateImplementationAction.html",
    "title": "Enum DependencyContainerDuplicateImplementationAction | Unosquare SWAN",
    "keywords": "Enum DependencyContainerDuplicateImplementationAction Enumerates duplicate definition actions. Namespace : Swan.Components Syntax public enum DependencyContainerDuplicateImplementationAction Fields Name Description Fail The fail RegisterMultiple The register multiple RegisterSingle The register single Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.DependencyContainer.TypeRegistration.html": {
    "href": "api/Swan.Components.DependencyContainer.TypeRegistration.html",
    "title": "Class DependencyContainer.TypeRegistration | Unosquare SWAN",
    "keywords": "Class DependencyContainer.TypeRegistration Represents a Type Registration within the IoC Container. Inheritance Object DependencyContainer.TypeRegistration Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public sealed class TypeRegistration Constructors TypeRegistration(Type, String) Initializes a new instance of the DependencyContainer.TypeRegistration class. Declaration public TypeRegistration(Type type, string name = null) Parameters Type Name Description Type type The type. String name The name. Properties Name Gets the name. Declaration public string Name { get; } Property Value Type Description String The name. Type Gets the type. Declaration public Type Type { get; } Property Value Type Description Type The type. Methods Equals(Object) Determines whether the specified Object , is equal to this instance. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides Object.Equals(Object) GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Object.GetHashCode() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.DelayProvider.DelayStrategy.html": {
    "href": "api/Swan.Components.DelayProvider.DelayStrategy.html",
    "title": "Enum DelayProvider.DelayStrategy | Unosquare SWAN",
    "keywords": "Enum DelayProvider.DelayStrategy Enumerates the different ways of providing delays. Namespace : Swan.Components Syntax public enum DelayStrategy Fields Name Description TaskDelay Using the Task.Delay(1).Wait mechanism. ThreadPool Using a wait event that completes in a background ThreadPool thread. ThreadSleep Using the Thread.Sleep(15) mechanism. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Abstractions.WorkerBase.StateChangeRequest.html": {
    "href": "api/Swan.Abstractions.WorkerBase.StateChangeRequest.html",
    "title": "Enum WorkerBase.StateChangeRequest | Unosquare SWAN",
    "keywords": "Enum WorkerBase.StateChangeRequest Enumerates all the different state change requests. Namespace : Swan.Abstractions Syntax protected enum StateChangeRequest Fields Name Description None No state change request. Pause Pause state change request Resume Resume state change request Start Start state change request Stop Stop state change request Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Abstractions.ServiceBase.html": {
    "href": "api/Swan.Abstractions.ServiceBase.html",
    "title": "Class ServiceBase | Unosquare SWAN",
    "keywords": "Class ServiceBase Mimic a Windows ServiceBase class. Useful to keep compatibility with applications running as services in OS different to Windows. Inheritance Object ServiceBase Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Abstractions Syntax public abstract class ServiceBase Properties AutoLog Indicates whether to report Start, Stop, Pause, and Continue commands in the event log. Declaration public bool AutoLog { get; set; } Property Value Type Description Boolean true if [automatic log]; otherwise, false . CanPauseAndContinue Gets or sets a value indicating whether the service can be paused and resumed. Declaration public bool CanPauseAndContinue { get; set; } Property Value Type Description Boolean true if this instance can pause and continue; otherwise, false . CanShutdown Gets or sets a value indicating whether the service should be notified when the system is shutting down. Declaration public bool CanShutdown { get; set; } Property Value Type Description Boolean true if this instance can shutdown; otherwise, false . CanStop Gets or sets a value indicating whether the service can be stopped once it has started. Declaration public bool CanStop { get; set; } Property Value Type Description Boolean true if this instance can stop; otherwise, false . ExitCode Gets or sets the exit code. Declaration public int ExitCode { get; set; } Property Value Type Description Int32 The exit code. ServiceName Gets or sets the name of the service. Declaration public string ServiceName { get; set; } Property Value Type Description String The name of the service. Methods OnStart(String[]) When implemented in a derived class, executes when a Start command is sent to the service by the Service Control Manager (SCM) or when the operating system starts (for a service that starts automatically). Specifies actions to take when the service starts. Declaration protected virtual void OnStart(string[] args) Parameters Type Name Description String [] args The arguments. OnStop() When implemented in a derived class, executes when a Stop command is sent to the service by the Service Control Manager (SCM). Specifies actions to take when a service stops running. Declaration protected virtual void OnStop() Stop() Stops the executing service. Declaration public void Stop() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.DnsQueryResult.html": {
    "href": "api/Swan.Networking.DnsQueryResult.html",
    "title": "Class DnsQueryResult | Unosquare SWAN",
    "keywords": "Class DnsQueryResult Represents a response from a DNS server. Inheritance Object DnsQueryResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Networking Syntax public class DnsQueryResult Properties AdditionalRecords Gets the additional records. Declaration public IList<DnsRecord> AdditionalRecords { get; } Property Value Type Description IList < DnsRecord > The additional records. AnswerRecords Gets the answer records. Declaration public IList<DnsRecord> AnswerRecords { get; } Property Value Type Description IList < DnsRecord > The answer records. AuthorityRecords Gets the authority records. Declaration public IList<DnsRecord> AuthorityRecords { get; } Property Value Type Description IList < DnsRecord > The authority records. Id Gets the identifier. Declaration public int Id { get; } Property Value Type Description Int32 The identifier. IsAuthoritativeServer Gets a value indicating whether this instance is authoritative server. Declaration public bool IsAuthoritativeServer { get; } Property Value Type Description Boolean true if this instance is authoritative server; otherwise, false . IsRecursionAvailable Gets a value indicating whether this instance is recursion available. Declaration public bool IsRecursionAvailable { get; } Property Value Type Description Boolean true if this instance is recursion available; otherwise, false . IsTruncated Gets a value indicating whether this instance is truncated. Declaration public bool IsTruncated { get; } Property Value Type Description Boolean true if this instance is truncated; otherwise, false . OperationCode Gets the operation code. Declaration public DnsOperationCode OperationCode { get; } Property Value Type Description DnsOperationCode The operation code. ResponseCode Gets the response code. Declaration public DnsResponseCode ResponseCode { get; } Property Value Type Description DnsResponseCode The response code. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.DnsQueryException.html": {
    "href": "api/Swan.Networking.DnsQueryException.html",
    "title": "Class DnsQueryException | Unosquare SWAN",
    "keywords": "Class DnsQueryException An exception thrown when the DNS query fails. Inheritance Object Exception DnsQueryException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Swan.Networking Syntax [Serializable] public class DnsQueryException : Exception, ISerializable, _Exception Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception See Also Exception Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Network.html": {
    "href": "api/Swan.Network.html",
    "title": "Class Network | Unosquare SWAN",
    "keywords": "Class Network Provides miscellaneous network utilities such as a Public IP finder, a DNS client to query DNS records of any kind, and an NTP client. Inheritance Object Network Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan Syntax public static class Network Fields DnsDefaultPort The DNS default port. Declaration public const int DnsDefaultPort = 53 Field Value Type Description Int32 NtpDefaultPort The NTP default port. Declaration public const int NtpDefaultPort = 123 Field Value Type Description Int32 Properties DomainName Gets the name of the network domain. Declaration public static string DomainName { get; } Property Value Type Description String The name of the network domain. HostName Gets the name of the host. Declaration public static string HostName { get; } Property Value Type Description String The name of the host. Methods GetDnsHostEntryAsync(String) Gets the DNS host entry (a list of IP addresses) for the domain name. Declaration public static Task<IPAddress[]> GetDnsHostEntryAsync(string fqdn) Parameters Type Name Description String fqdn The FQDN. Returns Type Description Task < IPAddress []> An array of local ip addresses of the result produced by this task. GetDnsHostEntryAsync(String, IPAddress, Int32) Gets the DNS host entry (a list of IP addresses) for the domain name. Declaration public static Task<IPAddress[]> GetDnsHostEntryAsync(string fqdn, IPAddress dnsServer, int port) Parameters Type Name Description String fqdn The FQDN. IPAddress dnsServer The DNS server. Int32 port The port. Returns Type Description Task < IPAddress []> An array of local ip addresses of the result produced by this task. Exceptions Type Condition ArgumentNullException fqdn. GetDnsPointerEntryAsync(IPAddress) Gets the reverse lookup FQDN of the given IP Address. Declaration public static Task<string> GetDnsPointerEntryAsync(IPAddress query) Parameters Type Name Description IPAddress query The query. Returns Type Description Task < String > A String that represents the current object. GetDnsPointerEntryAsync(IPAddress, IPAddress, Int32) Gets the reverse lookup FQDN of the given IP Address. Declaration public static Task<string> GetDnsPointerEntryAsync(IPAddress query, IPAddress dnsServer, int port) Parameters Type Name Description IPAddress query The query. IPAddress dnsServer The DNS server. Int32 port The port. Returns Type Description Task < String > A String that represents the current object. GetIPv4Addresses(NetworkInterfaceType, Boolean, Boolean) Retrieves the local ip addresses. Declaration public static IPAddress[] GetIPv4Addresses(NetworkInterfaceType interfaceType, bool skipTypeFilter = false, bool includeLoopback = false) Parameters Type Name Description NetworkInterfaceType interfaceType Type of the interface. Boolean skipTypeFilter if set to true [skip type filter]. Boolean includeLoopback if set to true [include loopback]. Returns Type Description IPAddress [] An array of local ip addresses. GetIPv4Addresses(Boolean) Retrieves the local ip addresses. Declaration public static IPAddress[] GetIPv4Addresses(bool includeLoopback = true) Parameters Type Name Description Boolean includeLoopback if set to true [include loopback]. Returns Type Description IPAddress [] An array of local ip addresses. GetIPv4DnsServers() Gets the configured IPv4 DNS servers for the active network interfaces. Declaration public static IPAddress[] GetIPv4DnsServers() Returns Type Description IPAddress [] A collection of NetworkInterface/IPInterfaceProperties pairs that represents the active IPv4 interfaces. GetIPv4Interfaces() Gets the active IPv4 interfaces. Only those interfaces with a valid unicast address and a valid gateway will be returned in the collection. Declaration public static Dictionary<NetworkInterface, IPInterfaceProperties> GetIPv4Interfaces() Returns Type Description Dictionary < NetworkInterface , IPInterfaceProperties > A collection of NetworkInterface/IPInterfaceProperties pairs that represents the active IPv4 interfaces. GetNetworkTimeUtcAsync(IPAddress, Int32) Gets the UTC time by querying from an NTP server. Declaration public static Task<DateTime> GetNetworkTimeUtcAsync(IPAddress ntpServerAddress, int port = 123) Parameters Type Name Description IPAddress ntpServerAddress The NTP server address. Int32 port The port. Returns Type Description Task < DateTime > The UTC time by querying from an NTP server of the result produced by this Task. GetNetworkTimeUtcAsync(String, Int32) Gets the UTC time by querying from an NTP server. Declaration public static Task<DateTime> GetNetworkTimeUtcAsync(string ntpServerName = \"pool.ntp.org\", int port = 123) Parameters Type Name Description String ntpServerName The NTP server, by default pool.ntp.org. Int32 port The port, by default NTP 123. Returns Type Description Task < DateTime > The UTC time by querying from an NTP server of the result produced by this Task. GetPublicIPAddressAsync(CancellationToken) Gets the public IP address using ipify.org. Declaration public static Task<IPAddress> GetPublicIPAddressAsync(CancellationToken ct = default(CancellationToken)) Parameters Type Name Description CancellationToken ct The cancellation token. Returns Type Description Task < IPAddress > A public IP address of the result produced by this Task. QueryDnsAsync(String, DnsRecordType) Queries the DNS server for the specified record type. Declaration public static Task<DnsQueryResult> QueryDnsAsync(string query, DnsRecordType recordType) Parameters Type Name Description String query The query. DnsRecordType recordType Type of the record. Returns Type Description Task < DnsQueryResult > Queries the DNS server for the specified record type of the result produced by this Task. QueryDnsAsync(String, DnsRecordType, IPAddress, Int32) Queries the DNS server for the specified record type. Declaration public static Task<DnsQueryResult> QueryDnsAsync(string query, DnsRecordType recordType, IPAddress dnsServer, int port) Parameters Type Name Description String query The query. DnsRecordType recordType Type of the record. IPAddress dnsServer The DNS server. Int32 port The port. Returns Type Description Task < DnsQueryResult > Queries the DNS server for the specified record type of the result produced by this Task. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.ConnectionListenerStoppedEventArgs.html": {
    "href": "api/Swan.ConnectionListenerStoppedEventArgs.html",
    "title": "Class ConnectionListenerStoppedEventArgs | Unosquare SWAN",
    "keywords": "Class ConnectionListenerStoppedEventArgs Event arguments for when a server listener stopped. Inheritance Object EventArgs ConnectionListenerStoppedEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan Syntax public class ConnectionListenerStoppedEventArgs : EventArgs Constructors ConnectionListenerStoppedEventArgs(IPEndPoint, Exception) Initializes a new instance of the ConnectionListenerStoppedEventArgs class. Declaration public ConnectionListenerStoppedEventArgs(IPEndPoint listenerEndPoint, Exception ex = null) Parameters Type Name Description IPEndPoint listenerEndPoint The listener end point. Exception ex The ex. Exceptions Type Condition ArgumentNullException listenerEndPoint or ex. Properties EndPoint Gets the end point. Declaration public IPEndPoint EndPoint { get; } Property Value Type Description IPEndPoint The end point. Error Gets the error. Declaration public Exception Error { get; } Property Value Type Description Exception The error. See Also EventArgs Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.ConnectionDataReceivedEventArgs.html": {
    "href": "api/Swan.ConnectionDataReceivedEventArgs.html",
    "title": "Class ConnectionDataReceivedEventArgs | Unosquare SWAN",
    "keywords": "Class ConnectionDataReceivedEventArgs Event arguments for when data is received. Inheritance Object EventArgs ConnectionDataReceivedEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan Syntax public class ConnectionDataReceivedEventArgs : EventArgs Constructors ConnectionDataReceivedEventArgs(Byte[], ConnectionDataReceivedTrigger, Boolean) Initializes a new instance of the ConnectionDataReceivedEventArgs class. Declaration public ConnectionDataReceivedEventArgs(byte[] buffer, ConnectionDataReceivedTrigger trigger, bool moreAvailable) Parameters Type Name Description Byte [] buffer The buffer. ConnectionDataReceivedTrigger trigger The trigger. Boolean moreAvailable if set to true [more available]. Properties Buffer Gets the buffer. Declaration public byte[] Buffer { get; } Property Value Type Description Byte [] The buffer. HasMoreAvailable Gets a value indicating whether the receive buffer has more bytes available. Declaration public bool HasMoreAvailable { get; } Property Value Type Description Boolean true if this instance has more available; otherwise, false . Trigger Gets the cause as to why this event was thrown. Declaration public ConnectionDataReceivedTrigger Trigger { get; } Property Value Type Description ConnectionDataReceivedTrigger The trigger. Methods GetStringFromBuffer(Byte[], Encoding) Gets the string from the given buffer. Declaration public static string GetStringFromBuffer(byte[] buffer, Encoding encoding) Parameters Type Name Description Byte [] buffer The buffer. Encoding encoding The encoding. Returns Type Description String A String that contains the results of decoding the specified sequence of bytes. GetStringFromBuffer(Encoding) Gets the string from buffer. Declaration public string GetStringFromBuffer(Encoding encoding) Parameters Type Name Description Encoding encoding The encoding. Returns Type Description String A String that contains the results of decoding the specified sequence of bytes. See Also EventArgs Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.ConnectionAcceptingEventArgs.html": {
    "href": "api/Swan.ConnectionAcceptingEventArgs.html",
    "title": "Class ConnectionAcceptingEventArgs | Unosquare SWAN",
    "keywords": "Class ConnectionAcceptingEventArgs Occurs before a connection is accepted. Set the Cancel property to true to prevent the connection from being accepted. Inheritance Object EventArgs ConnectionAcceptedEventArgs ConnectionAcceptingEventArgs Inherited Members ConnectionAcceptedEventArgs.Client EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan Syntax public class ConnectionAcceptingEventArgs : ConnectionAcceptedEventArgs Constructors ConnectionAcceptingEventArgs(TcpClient) Initializes a new instance of the ConnectionAcceptingEventArgs class. Declaration public ConnectionAcceptingEventArgs(TcpClient client) Parameters Type Name Description TcpClient client The client. Properties Cancel Setting Cancel to true rejects the new TcpClient. Declaration public bool Cancel { get; set; } Property Value Type Description Boolean true if cancel; otherwise, false . Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.TypesConcurrentDictionary.html": {
    "href": "api/Swan.Components.TypesConcurrentDictionary.html",
    "title": "Class TypesConcurrentDictionary | Unosquare SWAN",
    "keywords": "Class TypesConcurrentDictionary Represents a Concurrent Dictionary for TypeRegistration. Inheritance Object ConcurrentDictionary < DependencyContainer.TypeRegistration , ObjectFactoryBase > TypesConcurrentDictionary Implements IDictionary < DependencyContainer.TypeRegistration , ObjectFactoryBase > ICollection < KeyValuePair < DependencyContainer.TypeRegistration , ObjectFactoryBase >> IDictionary ICollection IReadOnlyDictionary < DependencyContainer.TypeRegistration , ObjectFactoryBase > IReadOnlyCollection < KeyValuePair < DependencyContainer.TypeRegistration , ObjectFactoryBase >> IEnumerable < KeyValuePair < DependencyContainer.TypeRegistration , ObjectFactoryBase >> IEnumerable Inherited Members ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.TryAdd(DependencyContainer.TypeRegistration, ObjectFactoryBase) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.ContainsKey(DependencyContainer.TypeRegistration) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.TryRemove(DependencyContainer.TypeRegistration, ObjectFactoryBase) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.TryGetValue(DependencyContainer.TypeRegistration, ObjectFactoryBase) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.TryUpdate(DependencyContainer.TypeRegistration, ObjectFactoryBase, ObjectFactoryBase) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.Clear() System.Collections.Concurrent.ConcurrentDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>>.CopyTo(System.Collections.Generic.KeyValuePair<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>[], System.Int32) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.ToArray() ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.GetEnumerator() ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.GetOrAdd(DependencyContainer.TypeRegistration, Func<DependencyContainer.TypeRegistration, ObjectFactoryBase>) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.GetOrAdd(DependencyContainer.TypeRegistration, ObjectFactoryBase) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.GetOrAdd<TArg>(DependencyContainer.TypeRegistration, Func<DependencyContainer.TypeRegistration, TArg, ObjectFactoryBase>, TArg) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.AddOrUpdate<TArg>(DependencyContainer.TypeRegistration, Func<DependencyContainer.TypeRegistration, TArg, ObjectFactoryBase>, Func<DependencyContainer.TypeRegistration, ObjectFactoryBase, TArg, ObjectFactoryBase>, TArg) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.AddOrUpdate(DependencyContainer.TypeRegistration, Func<DependencyContainer.TypeRegistration, ObjectFactoryBase>, Func<DependencyContainer.TypeRegistration, ObjectFactoryBase, ObjectFactoryBase>) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.AddOrUpdate(DependencyContainer.TypeRegistration, ObjectFactoryBase, Func<DependencyContainer.TypeRegistration, ObjectFactoryBase, ObjectFactoryBase>) System.Collections.Concurrent.ConcurrentDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.System.Collections.Generic.IDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.Add(Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase) System.Collections.Concurrent.ConcurrentDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.System.Collections.Generic.IDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.Remove(Swan.Components.DependencyContainer.TypeRegistration) System.Collections.Concurrent.ConcurrentDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>>.Add(System.Collections.Generic.KeyValuePair<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>) System.Collections.Concurrent.ConcurrentDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>>.Contains(System.Collections.Generic.KeyValuePair<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>) System.Collections.Concurrent.ConcurrentDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>>.Remove(System.Collections.Generic.KeyValuePair<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.IEnumerable.GetEnumerator() ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.IDictionary.Add(Object, Object) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.IDictionary.Contains(Object) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.IDictionary.GetEnumerator() ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.IDictionary.Remove(Object) System.Collections.Concurrent.ConcurrentDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Concurrent.ConcurrentDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.System.Collections.IDictionary.set_Item(System.Object, System.Object) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.ICollection.CopyTo(Array, Int32) ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.Item[DependencyContainer.TypeRegistration] ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.Count ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.IsEmpty ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.Keys System.Collections.Concurrent.ConcurrentDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.System.Collections.Generic.IReadOnlyDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.Keys ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.Values System.Collections.Concurrent.ConcurrentDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.System.Collections.Generic.IReadOnlyDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.Values System.Collections.Concurrent.ConcurrentDictionary<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<Swan.Components.DependencyContainer.TypeRegistration, Swan.Components.ObjectFactoryBase>>.IsReadOnly ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.IDictionary.IsFixedSize ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.IDictionary.IsReadOnly ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.IDictionary.Keys ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.IDictionary.Values ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.IDictionary.Item[Object] ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.ICollection.IsSynchronized ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>.ICollection.SyncRoot Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public class TypesConcurrentDictionary : ConcurrentDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>, IDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>, ICollection<KeyValuePair<DependencyContainer.TypeRegistration, ObjectFactoryBase>>, IDictionary, ICollection, IReadOnlyDictionary<DependencyContainer.TypeRegistration, ObjectFactoryBase>, IReadOnlyCollection<KeyValuePair<DependencyContainer.TypeRegistration, ObjectFactoryBase>>, IEnumerable<KeyValuePair<DependencyContainer.TypeRegistration, ObjectFactoryBase>>, IEnumerable Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.TypesConcurrentDictionary.ObjectConstructor.html": {
    "href": "api/Swan.Components.TypesConcurrentDictionary.ObjectConstructor.html",
    "title": "Delegate TypesConcurrentDictionary.ObjectConstructor | Unosquare SWAN",
    "keywords": "Delegate TypesConcurrentDictionary.ObjectConstructor Represents a delegate to build an object with the parameters. Namespace : Swan.Components Syntax public delegate object ObjectConstructor(params object[] parameters); Parameters Type Name Description Object [] parameters The parameters. Returns Type Description Object The built object. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.ObjectFactoryBase.html": {
    "href": "api/Swan.Components.ObjectFactoryBase.html",
    "title": "Class ObjectFactoryBase | Unosquare SWAN",
    "keywords": "Class ObjectFactoryBase Represents an abstract class for Object Factory. Inheritance Object ObjectFactoryBase Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public abstract class ObjectFactoryBase Properties AssumeConstruction Whether to assume this factory successfully constructs its objects Generally set to true for delegate style factories as CanResolve cannot delve into the delegates they contain. Declaration public virtual bool AssumeConstruction { get; } Property Value Type Description Boolean Constructor Constructor to use, if specified. Declaration public ConstructorInfo Constructor { get; } Property Value Type Description ConstructorInfo CreatesType The type the factory instantiates. Declaration public abstract Type CreatesType { get; } Property Value Type Description Type MultiInstanceVariant Gets the multi instance variant. Declaration public virtual ObjectFactoryBase MultiInstanceVariant { get; } Property Value Type Description ObjectFactoryBase The multi instance variant. Exceptions Type Condition DependencyContainerRegistrationException multi-instance. SingletonVariant Gets the singleton variant. Declaration public virtual ObjectFactoryBase SingletonVariant { get; } Property Value Type Description ObjectFactoryBase The singleton variant. Exceptions Type Condition DependencyContainerRegistrationException singleton. StrongReferenceVariant Gets the strong reference variant. Declaration public virtual ObjectFactoryBase StrongReferenceVariant { get; } Property Value Type Description ObjectFactoryBase The strong reference variant. Exceptions Type Condition DependencyContainerRegistrationException strong reference. WeakReferenceVariant Gets the weak reference variant. Declaration public virtual ObjectFactoryBase WeakReferenceVariant { get; } Property Value Type Description ObjectFactoryBase The weak reference variant. Exceptions Type Condition DependencyContainerRegistrationException weak reference. Methods GetFactoryForChildContainer(Type, DependencyContainer, DependencyContainer) Gets the factory for child container. Declaration public virtual ObjectFactoryBase GetFactoryForChildContainer(Type type, DependencyContainer parent, DependencyContainer child) Parameters Type Name Description Type type The type. DependencyContainer parent The parent. DependencyContainer child The child. Returns Type Description ObjectFactoryBase GetObject(Type, DependencyContainer, DependencyContainerResolveOptions) Create the type. Declaration public abstract object GetObject(Type requestedType, DependencyContainer container, DependencyContainerResolveOptions options) Parameters Type Name Description Type requestedType Type user requested to be resolved. DependencyContainer container Container that requested the creation. DependencyContainerResolveOptions options The options. Returns Type Description Object Instance of type. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.MultiRegisterOptions.html": {
    "href": "api/Swan.Components.MultiRegisterOptions.html",
    "title": "Class MultiRegisterOptions | Unosquare SWAN",
    "keywords": "Class MultiRegisterOptions Registration options for \"fluent\" API when registering multiple implementations. Inheritance Object MultiRegisterOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public sealed class MultiRegisterOptions Constructors MultiRegisterOptions(IEnumerable<RegisterOptions>) Initializes a new instance of the MultiRegisterOptions class. Declaration public MultiRegisterOptions(IEnumerable<RegisterOptions> registerOptions) Parameters Type Name Description IEnumerable < RegisterOptions > registerOptions The register options. Methods AsMultiInstance() Make registration multi-instance if possible. Declaration public MultiRegisterOptions AsMultiInstance() Returns Type Description MultiRegisterOptions A registration multi-instance for fluent API. Exceptions Type Condition DependencyContainerRegistrationException Generic Constraint Registration Exception. AsSingleton() Make registration a singleton (single instance) if possible. Declaration public MultiRegisterOptions AsSingleton() Returns Type Description MultiRegisterOptions A registration multi-instance for fluent API. Exceptions Type Condition DependencyContainerRegistrationException Generic Constraint Registration Exception. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.MessageHub.html": {
    "href": "api/Swan.Components.MessageHub.html",
    "title": "Class MessageHub | Unosquare SWAN",
    "keywords": "Class MessageHub Messenger hub responsible for taking subscriptions/publications and delivering of messages. Inheritance Object MessageHub Implements IMessageHub Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public sealed class MessageHub : IMessageHub Examples The following code describes how to use a MessageHub. Both the subscription and the message sending are done in the same place but this is only for explanatory purposes. class Example { using Swan; using Swan.Components; static void Main() { // using DependencyContainer to create an instance of MessageHub var messageHub = DependencyContainer .Current .Resolve<IMessageHub>() as MessageHub; // create an instance of the publisher class // which has a string as its content var message = new MessageHubGenericMessage<string>(new object(), \"SWAN\"); // subscribe to the publisher's event // and just print out the content which is a string // a token is returned which can be used to unsubscribe later on var token = messageHub .Subscribe<MessageHubGenericMessage<string>>(m => m.Content.Info()); // publish the message described above which is // the string 'SWAN' messageHub.Publish(message); // unsuscribe, we will no longer receive any messages messageHub.Unsubscribe<MessageHubGenericMessage<string>>(token); Terminal.Flush(); } } Methods Publish<TMessage>(TMessage) Publish a message to any subscribers. Declaration public void Publish<TMessage>(TMessage message) where TMessage : class, IMessageHubMessage Parameters Type Name Description TMessage message Message to deliver. Type Parameters Name Description TMessage Type of message. PublishAsync<TMessage>(TMessage) Publish a message to any subscribers asynchronously. Declaration public Task PublishAsync<TMessage>(TMessage message) where TMessage : class, IMessageHubMessage Parameters Type Name Description TMessage message Message to deliver. Returns Type Description Task A task with the publish. Type Parameters Name Description TMessage Type of message. Subscribe<TMessage>(Action<TMessage>, Boolean, IMessageHubProxy) Subscribe to a message type with the given destination and delivery action. Messages will be delivered via the specified proxy. All messages of this type will be delivered. Declaration public MessageHubSubscriptionToken Subscribe<TMessage>(Action<TMessage> deliveryAction, bool useStrongReferences = true, IMessageHubProxy proxy = null) where TMessage : class, IMessageHubMessage Parameters Type Name Description Action <TMessage> deliveryAction Action to invoke when message is delivered. Boolean useStrongReferences Use strong references to destination and deliveryAction. IMessageHubProxy proxy Proxy to use when delivering the messages. Returns Type Description MessageHubSubscriptionToken MessageSubscription used to unsubscribing. Type Parameters Name Description TMessage Type of message. Subscribe<TMessage>(Action<TMessage>, Func<TMessage, Boolean>, Boolean, IMessageHubProxy) Subscribe to a message type with the given destination and delivery action with the given filter. Messages will be delivered via the specified proxy. All references are held with WeakReferences Only messages that \"pass\" the filter will be delivered. Declaration public MessageHubSubscriptionToken Subscribe<TMessage>(Action<TMessage> deliveryAction, Func<TMessage, bool> messageFilter, bool useStrongReferences = true, IMessageHubProxy proxy = null) where TMessage : class, IMessageHubMessage Parameters Type Name Description Action <TMessage> deliveryAction Action to invoke when message is delivered. Func <TMessage, Boolean > messageFilter The message filter. Boolean useStrongReferences Use strong references to destination and deliveryAction. IMessageHubProxy proxy Proxy to use when delivering the messages. Returns Type Description MessageHubSubscriptionToken MessageSubscription used to unsubscribing. Type Parameters Name Description TMessage Type of message. Unsubscribe<TMessage>(MessageHubSubscriptionToken) Unsubscribe from a particular message type. Does not throw an exception if the subscription is not found. Declaration public void Unsubscribe<TMessage>(MessageHubSubscriptionToken subscriptionToken) where TMessage : class, IMessageHubMessage Parameters Type Name Description MessageHubSubscriptionToken subscriptionToken Subscription token received from Subscribe. Type Parameters Name Description TMessage Type of message. Implements IMessageHub Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.IMessageHubSubscription.html": {
    "href": "api/Swan.Components.IMessageHubSubscription.html",
    "title": "Interface IMessageHubSubscription | Unosquare SWAN",
    "keywords": "Interface IMessageHubSubscription Represents a message subscription. Namespace : Swan.Components Syntax public interface IMessageHubSubscription Properties SubscriptionToken Token returned to the subscribed to reference this subscription. Declaration MessageHubSubscriptionToken SubscriptionToken { get; } Property Value Type Description MessageHubSubscriptionToken Methods Deliver(IMessageHubMessage) Deliver the message. Declaration void Deliver(IMessageHubMessage message) Parameters Type Name Description IMessageHubMessage message Message to deliver. ShouldAttemptDelivery(IMessageHubMessage) Whether delivery should be attempted. Declaration bool ShouldAttemptDelivery(IMessageHubMessage message) Parameters Type Name Description IMessageHubMessage message Message that may potentially be delivered. Returns Type Description Boolean true - ok to send, false - should not attempt to send. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.DependencyContainerWeakReferenceException.html": {
    "href": "api/Swan.Components.DependencyContainerWeakReferenceException.html",
    "title": "Class DependencyContainerWeakReferenceException | Unosquare SWAN",
    "keywords": "Class DependencyContainerWeakReferenceException Weak Reference Exception. Inheritance Object Exception DependencyContainerWeakReferenceException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Swan.Components Syntax public class DependencyContainerWeakReferenceException : Exception, ISerializable, _Exception Constructors DependencyContainerWeakReferenceException(Type) Initializes a new instance of the DependencyContainerWeakReferenceException class. Declaration public DependencyContainerWeakReferenceException(Type type) Parameters Type Name Description Type type The type. Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception See Also Exception Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.DependencyContainerUnregisteredResolutionAction.html": {
    "href": "api/Swan.Components.DependencyContainerUnregisteredResolutionAction.html",
    "title": "Enum DependencyContainerUnregisteredResolutionAction | Unosquare SWAN",
    "keywords": "Enum DependencyContainerUnregisteredResolutionAction Defines Resolution actions. Namespace : Swan.Components Syntax public enum DependencyContainerUnregisteredResolutionAction Fields Name Description AttemptResolve Attempt to resolve type, even if the type isn't registered. Registered types/options will always take precedence. Fail Fail resolution if type not explicitly registered GenericsOnly Attempt to resolve unregistered type if requested type is generic and no registration exists for the specific generic parameters used. Registered types/options will always take precedence. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.DependencyContainerRegistrationException.html": {
    "href": "api/Swan.Components.DependencyContainerRegistrationException.html",
    "title": "Class DependencyContainerRegistrationException | Unosquare SWAN",
    "keywords": "Class DependencyContainerRegistrationException Generic Constraint Registration Exception. Inheritance Object Exception DependencyContainerRegistrationException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Swan.Components Syntax public class DependencyContainerRegistrationException : Exception, ISerializable, _Exception Constructors DependencyContainerRegistrationException(Type, IEnumerable<Type>) Initializes a new instance of the DependencyContainerRegistrationException class. Declaration public DependencyContainerRegistrationException(Type registerType, IEnumerable<Type> types) Parameters Type Name Description Type registerType Type of the register. IEnumerable < Type > types The types. DependencyContainerRegistrationException(Type, String, Boolean) Initializes a new instance of the DependencyContainerRegistrationException class. Declaration public DependencyContainerRegistrationException(Type type, string method, bool isTypeFactory = false) Parameters Type Name Description Type type The type. String method The method. Boolean isTypeFactory if set to true [is type factory]. Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception See Also Exception Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.DependencyContainerNamedResolutionFailureAction.html": {
    "href": "api/Swan.Components.DependencyContainerNamedResolutionFailureAction.html",
    "title": "Enum DependencyContainerNamedResolutionFailureAction | Unosquare SWAN",
    "keywords": "Enum DependencyContainerNamedResolutionFailureAction Enumerates failure actions. Namespace : Swan.Components Syntax public enum DependencyContainerNamedResolutionFailureAction Fields Name Description AttemptUnnamedResolution The attempt unnamed resolution Fail The fail Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.SmtpSessionState.html": {
    "href": "api/Swan.Networking.SmtpSessionState.html",
    "title": "Class SmtpSessionState | Unosquare SWAN",
    "keywords": "Class SmtpSessionState Represents the state of an SMTP session associated with a client. Inheritance Object SmtpSessionState Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Networking Syntax public class SmtpSessionState Constructors SmtpSessionState() Initializes a new instance of the SmtpSessionState class. Declaration public SmtpSessionState() Properties AuthMode Gets or sets the authentication mode. Declaration public string AuthMode { get; set; } Property Value Type Description String ClientHostname Gets or sets the client hostname. Declaration public string ClientHostname { get; set; } Property Value Type Description String DataBuffer Gets the contents of the data buffer. Declaration public List<byte> DataBuffer { get; protected set; } Property Value Type Description List < Byte > ExtendedData Gets or sets the extended data supporting any additional field for storage by a responder implementation. Declaration public object ExtendedData { get; set; } Property Value Type Description Object HasInitiated Gets or sets a value indicating whether this instance has initiated. Declaration public bool HasInitiated { get; set; } Property Value Type Description Boolean HasProvidedUsername Gets a value indicating whether this instance has provided username. Declaration public bool HasProvidedUsername { get; } Property Value Type Description Boolean IsAuthenticated Gets or sets a value indicating whether this instance is authenticated. Declaration public bool IsAuthenticated { get; set; } Property Value Type Description Boolean IsChannelSecure Gets or sets a value indicating whether this instance is channel secure. Declaration public bool IsChannelSecure { get; set; } Property Value Type Description Boolean IsInAuthMode Gets or sets a value indicating whether this instance is in authentication mode. Declaration public bool IsInAuthMode { get; set; } Property Value Type Description Boolean IsInDataMode Gets or sets a value indicating whether the session is currently receiving DATA. Declaration public bool IsInDataMode { get; set; } Property Value Type Description Boolean Password Gets or sets the password. Declaration public string Password { get; set; } Property Value Type Description String Recipients Gets the recipients. Declaration public List<string> Recipients { get; } Property Value Type Description List < String > SenderAddress Gets or sets the sender address. Declaration public string SenderAddress { get; set; } Property Value Type Description String SupportsExtensions Gets or sets a value indicating whether the current session supports extensions. Declaration public bool SupportsExtensions { get; set; } Property Value Type Description Boolean Username Gets or sets the username. Declaration public string Username { get; set; } Property Value Type Description String Methods Clone() Creates a new object that is a copy of the current instance. Declaration public virtual SmtpSessionState Clone() Returns Type Description SmtpSessionState A clone. Reset(Boolean) Resets the state table entirely. Declaration public void Reset(bool clearExtensionData) Parameters Type Name Description Boolean clearExtensionData if set to true [clear extension data]. ResetAuthentication() Resets the authentication state. Declaration public void ResetAuthentication() ResetEmail() Resets the data mode to false, clears the recipients, the sender address and the data buffer. Declaration public void ResetEmail() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.SmtpServerReply.html": {
    "href": "api/Swan.Networking.SmtpServerReply.html",
    "title": "Class SmtpServerReply | Unosquare SWAN",
    "keywords": "Class SmtpServerReply Represents an SMTP server response object. Inheritance Object SmtpServerReply Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Networking Syntax public class SmtpServerReply Constructors SmtpServerReply() Initializes a new instance of the SmtpServerReply class. Declaration public SmtpServerReply() SmtpServerReply(Int32, String) Initializes a new instance of the SmtpServerReply class. Declaration public SmtpServerReply(int responseCode, string content) Parameters Type Name Description Int32 responseCode The response code. String content The content. SmtpServerReply(Int32, String, String) Initializes a new instance of the SmtpServerReply class. Declaration public SmtpServerReply(int responseCode, string statusCode, string content) Parameters Type Name Description Int32 responseCode The response code. String statusCode The status code. String content The content. SmtpServerReply(Int32, String, String[]) Initializes a new instance of the SmtpServerReply class. Declaration public SmtpServerReply(int responseCode, string statusCode, params string[] content) Parameters Type Name Description Int32 responseCode The response code. String statusCode The status code. String [] content The content. Properties AuthorizationRequired Gets the authorization required reply. Declaration public static SmtpServerReply AuthorizationRequired { get; } Property Value Type Description SmtpServerReply BadSequenceOfCommands Gets the bad sequence of commands reply. Declaration public static SmtpServerReply BadSequenceOfCommands { get; } Property Value Type Description SmtpServerReply BadSyntaxCommandEmpty Gets the bad syntax command empty reply. Declaration public static SmtpServerReply BadSyntaxCommandEmpty { get; } Property Value Type Description SmtpServerReply CommandNotImplemented Gets the command not implemented reply. Declaration public static SmtpServerReply CommandNotImplemented { get; } Property Value Type Description SmtpServerReply CommandUnrecognized Gets the command unrecognized reply. Declaration public static SmtpServerReply CommandUnrecognized { get; } Property Value Type Description SmtpServerReply Content Gets the content. Declaration public List<string> Content { get; } Property Value Type Description List < String > EnhancedStatusCode Gets the enhanced status code. Declaration public string EnhancedStatusCode { get; } Property Value Type Description String IsPositive Gets a value indicating whether this instance is positive. Declaration public bool IsPositive { get; } Property Value Type Description Boolean IsValid Returns true if the response code is between 200 and 599. Declaration public bool IsValid { get; } Property Value Type Description Boolean Ok Gets the OK reply. Declaration public static SmtpServerReply Ok { get; } Property Value Type Description SmtpServerReply ProtocolViolation Gets the protocol violation reply. Declaration public static SmtpServerReply ProtocolViolation { get; } Property Value Type Description SmtpServerReply ReplyCode Gets the numeric response code. Declaration public int ReplyCode { get; } Property Value Type Description Int32 ReplyCodeCategory Gets the response category. Declaration public SmtpReplyCodeCategories ReplyCodeCategory { get; } Property Value Type Description SmtpReplyCodeCategories ReplyCodeSeverity Gets the response severity. Declaration public SmtpReplyCodeSeverities ReplyCodeSeverity { get; } Property Value Type Description SmtpReplyCodeSeverities SyntaxErrorArguments Gets the syntax error arguments reply. Declaration public static SmtpServerReply SyntaxErrorArguments { get; } Property Value Type Description SmtpServerReply SystemStatusBye Gets the system status bye reply. Declaration public static SmtpServerReply SystemStatusBye { get; } Property Value Type Description SmtpServerReply SystemStatusHelp Gets the system status help reply. Declaration public static SmtpServerReply SystemStatusHelp { get; } Property Value Type Description SmtpServerReply Methods Parse(String) Parses the specified text into a Server Reply for thorough analysis. Declaration public static SmtpServerReply Parse(string text) Parameters Type Name Description String text The text. Returns Type Description SmtpServerReply A new instance of SMTP server response object. ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.SmtpCommandNames.html": {
    "href": "api/Swan.Networking.SmtpCommandNames.html",
    "title": "Enum SmtpCommandNames | Unosquare SWAN",
    "keywords": "Enum SmtpCommandNames Enumerates all of the well-known SMTP command names. Namespace : Swan.Networking Syntax public enum SmtpCommandNames Fields Name Description AUTH The authentication command DATA The data command EHLO The ehlo command EXPN The expn command HELO The helo command HELP The help command MAIL The mail command NOOP The noop command QUIT The quit command RCPT The RCPT command RSET The rset command SAML The saml command SEND The send command SOML The soml command STARTTLS The starttls command Unknown An unknown command VRFY The vrfy command Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.SmtpClient.html": {
    "href": "api/Swan.Networking.SmtpClient.html",
    "title": "Class SmtpClient | Unosquare SWAN",
    "keywords": "Class SmtpClient Represents a basic SMTP client that is capable of submitting messages to an SMTP server. Inheritance Object SmtpClient Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Networking Syntax public class SmtpClient Examples The following code explains how to send a simple e-mail. using System.Net.Mail; class Example { static void Main() { // create a new smtp client using google's smtp server var client = new SmtpClient(\"smtp.gmail.com\", 587); // send an email client.SendMailAsync( new MailMessage(\"sender@test.com\", \"recipient@test.cm\", \"Subject\", \"Body\")); } } The following code demonstrates how to sent an e-mail using a SmtpSessionState: class Example { static void Main() { // create a new smtp client using google's smtp server var client = new SmtpClient(\"smtp.gmail.com\", 587); // create a new session state with a sender address var session = new SmtpSessionState { SenderAddress = \"sender@test.com\" }; // add a recipient session.Recipients.Add(\"recipient@test.cm\"); // send client.SendMailAsync(session); } } The following code shows how to send an e-mail with an attachment: using System.Net.Mail; class Example { static void Main() { // create a new smtp client using google's smtp server var client = new SmtpClient(\"smtp.gmail.com\", 587); // create a new session state with a sender address var session = new SmtpSessionState { SenderAddress = \"sender@test.com\" }; // add a recipient session.Recipients.Add(\"recipient@test.cm\"); // load a file as an attachment var attachment = new MimePart(\"image\", \"gif\") { Content = new MimeContent(File.OpenRead(\"meme.gif\"), ContentEncoding.Default), ContentDisposition = new ContentDisposition(ContentDisposition.Attachment), ContentTransferEncoding = ContentEncoding.Base64, FileName = Path.GetFileName(\"meme.gif\") }; // send client.SendMailAsync(session); } } Constructors SmtpClient(String, Int32) Initializes a new instance of the SmtpClient class. Declaration public SmtpClient(string host, int port) Parameters Type Name Description String host The host. Int32 port The port. Exceptions Type Condition ArgumentNullException host. Properties ClientHostname Gets or sets the name of the client that gets announced to the server. Declaration public string ClientHostname { get; set; } Property Value Type Description String The client hostname. Credentials Gets or sets the credentials. No credentials will be used if set to null. Declaration public NetworkCredential Credentials { get; set; } Property Value Type Description NetworkCredential The credentials. EnableSsl Gets or sets a value indicating whether the SSL is enabled. If set to false, communication between client and server will not be secured. Declaration public bool EnableSsl { get; set; } Property Value Type Description Boolean true if [enable SSL]; otherwise, false . Host Gets the host. Declaration public string Host { get; } Property Value Type Description String The host. Port Gets the port. Declaration public int Port { get; } Property Value Type Description Int32 The port. Methods SendMailAsync(MailMessage, String, RemoteCertificateValidationCallback, CancellationToken) Sends an email message asynchronously. Declaration public Task SendMailAsync(MailMessage message, string sessionId = null, RemoteCertificateValidationCallback callback = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MailMessage message The message. String sessionId The session identifier. RemoteCertificateValidationCallback callback The callback. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task that represents the asynchronous of send email operation. Exceptions Type Condition ArgumentNullException message. SendMailAsync(SmtpSessionState, String, RemoteCertificateValidationCallback, CancellationToken) Sends an email message using a session state object. Credentials, Enable SSL and Client Hostname are NOT taken from the state object but rather from the properties of this class. Declaration public Task SendMailAsync(SmtpSessionState sessionState, string sessionId = null, RemoteCertificateValidationCallback callback = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description SmtpSessionState sessionState The state. String sessionId The session identifier. RemoteCertificateValidationCallback callback The callback. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task that represents the asynchronous of send email operation. Exceptions Type Condition ArgumentNullException sessionState. SendMailAsync(IEnumerable<SmtpSessionState>, String, RemoteCertificateValidationCallback, CancellationToken) Sends an array of email messages using a session state object. Credentials, Enable SSL and Client Hostname are NOT taken from the state object but rather from the properties of this class. Declaration public Task SendMailAsync(IEnumerable<SmtpSessionState> sessionStates, string sessionId = null, RemoteCertificateValidationCallback callback = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IEnumerable < SmtpSessionState > sessionStates The session states. String sessionId The session identifier. RemoteCertificateValidationCallback callback The callback. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task that represents the asynchronous of send email operation. Exceptions Type Condition ArgumentNullException sessionStates. SecurityException Could not upgrade the channel to SSL. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.JsonRequestException.html": {
    "href": "api/Swan.Networking.JsonRequestException.html",
    "title": "Class JsonRequestException | Unosquare SWAN",
    "keywords": "Class JsonRequestException Represents errors that occurs requesting a JSON file through HTTP. Inheritance Object Exception JsonRequestException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Swan.Networking Syntax [Serializable] public class JsonRequestException : Exception, ISerializable, _Exception Constructors JsonRequestException(String, Int32, String) Initializes a new instance of the JsonRequestException class. Declaration public JsonRequestException(string message, int httpErrorCode = 500, string errorContent = null) Parameters Type Name Description String message The message. Int32 httpErrorCode The HTTP error code. String errorContent Content of the error. Properties HttpErrorCode Gets the HTTP error code. Declaration public int HttpErrorCode { get; } Property Value Type Description Int32 The HTTP error code. HttpErrorContent Gets the content of the HTTP error. Declaration public string HttpErrorContent { get; } Property Value Type Description String The content of the HTTP error. Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Exception.ToString() Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception See Also Exception Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.JsonClient.html": {
    "href": "api/Swan.Networking.JsonClient.html",
    "title": "Class JsonClient | Unosquare SWAN",
    "keywords": "Class JsonClient Represents a HttpClient with extended methods to use with JSON payloads and bearer tokens authentication. Inheritance Object JsonClient Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Networking Syntax public static class JsonClient Methods Authenticate(String, String, String, CancellationToken) Authenticate against a web server using Bearer Token. Declaration public static Task<IDictionary<string, object>> Authenticate(string requestUri, string username, string password, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String requestUri The request URI. String username The username. String password The password. CancellationToken ct The cancellation token. Returns Type Description Task < IDictionary < String , Object >> A task with a Dictionary with authentication data. Exceptions Type Condition ArgumentNullException url or username. SecurityException Error Authenticating. Get<T>(String, String, CancellationToken) Gets the specified URL and return the JSON data as object with optional authorization token. Declaration public static Task<T> Get<T>(string requestUri, string authorization = null, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String requestUri The request URI. String authorization The authorization. CancellationToken ct The cancellation token. Returns Type Description Task <T> A task with a result of the requested type. Type Parameters Name Description T The response type. GetBinary(String, String, CancellationToken) Gets the binary. Declaration public static Task<byte[]> GetBinary(string requestUri, string authorization = null, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String requestUri The request URI. String authorization The authorization. CancellationToken ct The cancellation token. Returns Type Description Task < Byte []> A task with a result of the requested byte array. Exceptions Type Condition ArgumentNullException url. JsonRequestException Error GET Binary. GetString(String, String, CancellationToken) Gets as string. Declaration public static Task<string> GetString(string requestUri, string authorization = null, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String requestUri The request URI. String authorization The authorization. CancellationToken ct The cancellation token. Returns Type Description Task < String > A task with a result of the requested string. Exceptions Type Condition ArgumentNullException url. JsonRequestException Error GET JSON. GetString(Uri, IDictionary<String, IEnumerable<String>>, String, CancellationToken) Gets the string. Declaration public static Task<string> GetString(Uri uri, IDictionary<string, IEnumerable<string>> headers, string authorization = null, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description Uri uri The URI. IDictionary < String , IEnumerable < String >> headers The headers. String authorization The authorization. CancellationToken ct The ct. Returns Type Description Task < String > A task with a result of the requested string. Post(String, Object, String, CancellationToken) Posts the specified URL. Declaration public static Task<IDictionary<string, object>> Post(string requestUri, object payload, string authorization = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String requestUri The request URI. Object payload The payload. String authorization The authorization. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IDictionary < String , Object >> A task with a result as a collection of key/value pairs. Post<T>(String, Object, String, CancellationToken) Post a object as JSON with optional authorization token. Declaration public static Task<T> Post<T>(string requestUri, object payload, string authorization = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String requestUri The request URI. Object payload The payload. String authorization The authorization. CancellationToken cancellationToken The cancellation token. Returns Type Description Task <T> A task with a result of the requested type. Type Parameters Name Description T The type of response object. PostFile<T>(String, Byte[], String, String, CancellationToken) Posts the file. Declaration public static Task<T> PostFile<T>(string requestUri, byte[] buffer, string fileName, string authorization = null, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String requestUri The request URI. Byte [] buffer The buffer. String fileName Name of the file. String authorization The authorization. CancellationToken ct The cancellation token. Returns Type Description Task <T> A task with a result of the requested string. Type Parameters Name Description T The response type. PostFileString(String, Byte[], String, String, CancellationToken) Posts the file. Declaration public static Task<string> PostFileString(string requestUri, byte[] buffer, string fileName, string authorization = null, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String requestUri The request URI. Byte [] buffer The buffer. String fileName Name of the file. String authorization The authorization. CancellationToken ct The cancellation token. Returns Type Description Task < String > A task with a result of the requested string. PostString(String, Object, String, CancellationToken) Posts the specified URL. Declaration public static Task<string> PostString(string requestUri, object payload, string authorization = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String requestUri The request URI. Object payload The payload. String authorization The authorization. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > A task with a result of the requested string. Exceptions Type Condition ArgumentNullException url. JsonRequestException Error POST JSON. Put(String, Object, String, CancellationToken) Puts the specified URL. Declaration public static Task<IDictionary<string, object>> Put(string requestUri, object payload, string authorization = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String requestUri The request URI. Object payload The payload. String authorization The authorization. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IDictionary < String , Object >> A task with a result of the requested collection of key/value pairs. Put<T>(String, Object, String, CancellationToken) Puts the specified URL. Declaration public static Task<T> Put<T>(string requestUri, object payload, string authorization = null, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String requestUri The request URI. Object payload The payload. String authorization The authorization. CancellationToken ct The cancellation token. Returns Type Description Task <T> A task with a result of the requested type. Type Parameters Name Description T The type of response object. PutString(String, Object, String, CancellationToken) Puts as string. Declaration public static Task<string> PutString(string requestUri, object payload, string authorization = null, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String requestUri The request URI. Object payload The payload. String authorization The authorization. CancellationToken ct The cancellation token. Returns Type Description Task < String > A task with a result of the requested string. Exceptions Type Condition ArgumentNullException url. JsonRequestException Error PUT JSON. SendAsync(HttpMethod, String, Object, String, CancellationToken) Sends the asynchronous request. Declaration public static Task<string> SendAsync(HttpMethod method, string requestUri, object payload, string authorization = null, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description HttpMethod method The method. String requestUri The request URI. Object payload The payload. String authorization The authorization. CancellationToken ct The cancellation token. Returns Type Description Task < String > A task with a result of the requested string. Exceptions Type Condition ArgumentNullException requestUri. JsonRequestException Error {method} JSON. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.DnsOperationCode.html": {
    "href": "api/Swan.Networking.DnsOperationCode.html",
    "title": "Enum DnsOperationCode | Unosquare SWAN",
    "keywords": "Enum DnsOperationCode Enumerates the different DNS operation codes. Namespace : Swan.Networking Syntax public enum DnsOperationCode Fields Name Description IQuery IQuery operation Notify Notify operation Query Query operation Status Status operation Update Update operation Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.ConnectionListener.html": {
    "href": "api/Swan.Networking.ConnectionListener.html",
    "title": "Class ConnectionListener | Unosquare SWAN",
    "keywords": "Class ConnectionListener TCP Listener manager with built-in events and asynchronous functionality. This networking component is typically used when writing server software. Inheritance Object ConnectionListener Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Networking Syntax public sealed class ConnectionListener : IDisposable Constructors ConnectionListener(IPAddress, Int32) Initializes a new instance of the ConnectionListener class. Declaration public ConnectionListener(IPAddress listenAddress, int listenPort) Parameters Type Name Description IPAddress listenAddress The listen address. Int32 listenPort The listen port. ConnectionListener(IPEndPoint) Initializes a new instance of the ConnectionListener class. Declaration public ConnectionListener(IPEndPoint listenEndPoint) Parameters Type Name Description IPEndPoint listenEndPoint The listen end point. ConnectionListener(Int32) Initializes a new instance of the ConnectionListener class. It uses the loopback address for listening. Declaration public ConnectionListener(int listenPort) Parameters Type Name Description Int32 listenPort The listen port. Properties Id Gets a unique identifier that gets automatically assigned upon instantiation of this class. Declaration public Guid Id { get; } Property Value Type Description Guid The unique identifier. IsListening Gets a value indicating whether this listener is active. Declaration public bool IsListening { get; } Property Value Type Description Boolean true if this instance is listening; otherwise, false . LocalEndPoint Gets the local end point on which we are listening. Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint The local end point. Methods Dispose() Declaration public void Dispose() Finalize() Finalizes an instance of the ConnectionListener class. Declaration protected void Finalize() Start() Starts the listener in an asynchronous, non-blocking fashion. Subscribe to the events of this class to gain access to connected client sockets. Declaration public void Start() Exceptions Type Condition InvalidOperationException Cancellation has already been requested. This listener is not reusable. Stop() Stops the listener from receiving new connections. This does not prevent the listener from . Declaration public void Stop() ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() Events OnConnectionAccepted Occurs when a new connection is accepted. Declaration public event EventHandler<ConnectionAcceptedEventArgs> OnConnectionAccepted Event Type Type Description EventHandler < ConnectionAcceptedEventArgs > OnConnectionAccepting Occurs when a new connection requests a socket from the listener. Set Cancel = true to prevent the TCP client from being accepted. Declaration public event EventHandler<ConnectionAcceptingEventArgs> OnConnectionAccepting Event Type Type Description EventHandler < ConnectionAcceptingEventArgs > OnConnectionFailure Occurs when a connection fails to get accepted Declaration public event EventHandler<ConnectionFailureEventArgs> OnConnectionFailure Event Type Type Description EventHandler < ConnectionFailureEventArgs > OnListenerStopped Occurs when the listener stops. Declaration public event EventHandler<ConnectionListenerStoppedEventArgs> OnListenerStopped Event Type Type Description EventHandler < ConnectionListenerStoppedEventArgs > Implements System.IDisposable See Also IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.RegisterOptions.html": {
    "href": "api/Swan.Components.RegisterOptions.html",
    "title": "Class RegisterOptions | Unosquare SWAN",
    "keywords": "Class RegisterOptions Registration options for \"fluent\" API. Inheritance Object RegisterOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public sealed class RegisterOptions Constructors RegisterOptions(TypesConcurrentDictionary, DependencyContainer.TypeRegistration) Initializes a new instance of the RegisterOptions class. Declaration public RegisterOptions(TypesConcurrentDictionary registeredTypes, DependencyContainer.TypeRegistration registration) Parameters Type Name Description TypesConcurrentDictionary registeredTypes The registered types. DependencyContainer.TypeRegistration registration The registration. Methods AsMultiInstance() Make registration multi-instance if possible. Declaration public RegisterOptions AsMultiInstance() Returns Type Description RegisterOptions A registration options for fluent API. Exceptions Type Condition DependencyContainerRegistrationException Generic constraint registration exception. AsSingleton() Make registration a singleton (single instance) if possible. Declaration public RegisterOptions AsSingleton() Returns Type Description RegisterOptions A registration options for fluent API. Exceptions Type Condition DependencyContainerRegistrationException Generic constraint registration exception. WithStrongReference() Make registration hold a strong reference if possible. Declaration public RegisterOptions WithStrongReference() Returns Type Description RegisterOptions A registration options for fluent API. Exceptions Type Condition DependencyContainerRegistrationException Generic constraint registration exception. WithWeakReference() Make registration hold a weak reference if possible. Declaration public RegisterOptions WithWeakReference() Returns Type Description RegisterOptions A registration options for fluent API. Exceptions Type Condition DependencyContainerRegistrationException Generic constraint registration exception. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.ProcessRunner.html": {
    "href": "api/Swan.Components.ProcessRunner.html",
    "title": "Class ProcessRunner | Unosquare SWAN",
    "keywords": "Class ProcessRunner Provides methods to help create external processes, and efficiently capture the standard error and standard output streams. Inheritance Object ProcessRunner Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public static class ProcessRunner Methods GetProcessEncodedOutputAsync(String, String, Encoding, CancellationToken) Runs the process asynchronously and if the exit code is 0, returns all of the standard output text. If the exit code is something other than 0 it returns the contents of standard error. This method is meant to be used for programs that output a relatively small amount of text using a different encoder. Declaration public static Task<string> GetProcessEncodedOutputAsync(string filename, string arguments = \"\", Encoding encoding = null, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String filename The filename. String arguments The arguments. Encoding encoding The encoding. CancellationToken ct The cancellation token. Returns Type Description Task < String > The type of the result produced by this Task. GetProcessOutputAsync(String, String, String, CancellationToken) Gets the process output asynchronous. Declaration public static Task<string> GetProcessOutputAsync(string filename, string arguments, string workingDirectory, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String filename The filename. String arguments The arguments. String workingDirectory The working directory. CancellationToken ct The cancellation token. Returns Type Description Task < String > The type of the result produced by this Task. GetProcessOutputAsync(String, String, CancellationToken) Runs the process asynchronously and if the exit code is 0, returns all of the standard output text. If the exit code is something other than 0 it returns the contents of standard error. This method is meant to be used for programs that output a relatively small amount of text. Declaration public static Task<string> GetProcessOutputAsync(string filename, string arguments, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String filename The filename. String arguments The arguments. CancellationToken ct The cancellation token. Returns Type Description Task < String > The type of the result produced by this Task. Examples The following code explains how to run an external process using the GetProcessOutputAsync(String, String, CancellationToken) method. class Example { using System.Threading.Tasks; using Swan.Components; static async Task Main() { // execute a process and save its output var data = await ProcessRunner. GetProcessOutputAsync(\"dotnet\", \"--help\"); // print the output data.WriteLine(); } } GetProcessOutputAsync(String, CancellationToken) Runs the process asynchronously and if the exit code is 0, returns all of the standard output text. If the exit code is something other than 0 it returns the contents of standard error. This method is meant to be used for programs that output a relatively small amount of text. Declaration public static Task<string> GetProcessOutputAsync(string filename, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String filename The filename. CancellationToken ct The cancellation token. Returns Type Description Task < String > The type of the result produced by this Task. GetProcessResultAsync(String, String, String, Encoding, CancellationToken) Executes a process asynchronously and returns the text of the standard output and standard error streams along with the exit code. This method is meant to be used for programs that output a relatively small amount of text. Declaration public static Task<ProcessResult> GetProcessResultAsync(string filename, string arguments, string workingDirectory, Encoding encoding = null, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String filename The filename. String arguments The arguments. String workingDirectory The working directory. Encoding encoding The encoding. CancellationToken ct The cancellation token. Returns Type Description Task < ProcessResult > Text of the standard output and standard error streams along with the exit code as a ProcessResult instance. Examples The following code describes how to run an external process using the GetProcessResultAsync(String, String, String, Encoding, CancellationToken) method. class Example { using System.Threading.Tasks; using Swan.Components; static async Task Main() { // Execute a process asynchronously var data = await ProcessRunner.GetProcessResultAsync(\"dotnet\", \"--help\"); // print out the exit code $\"{data.ExitCode}\".WriteLine(); // print out the output data.StandardOutput.WriteLine(); // and the error if exists data.StandardError.Error(); } } Exceptions Type Condition ArgumentNullException filename. GetProcessResultAsync(String, String, CancellationToken) Executes a process asynchronously and returns the text of the standard output and standard error streams along with the exit code. This method is meant to be used for programs that output a relatively small amount of text. Declaration public static Task<ProcessResult> GetProcessResultAsync(string filename, string arguments = \"\", CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String filename The filename. String arguments The arguments. CancellationToken ct The cancellation token. Returns Type Description Task < ProcessResult > Text of the standard output and standard error streams along with the exit code as a ProcessResult instance. Exceptions Type Condition ArgumentNullException filename. RunProcessAsync(String, String, ProcessRunner.ProcessDataReceivedCallback, ProcessRunner.ProcessDataReceivedCallback, Boolean, CancellationToken) Runs an external process asynchronously, providing callbacks to capture binary data from the standard error and standard output streams. The callbacks contain a reference to the process so you can respond to output or error streams by writing to the process' input stream. The exit code (return value) will be -1 for forceful termination of the process. Declaration public static Task<int> RunProcessAsync(string filename, string arguments, ProcessRunner.ProcessDataReceivedCallback onOutputData, ProcessRunner.ProcessDataReceivedCallback onErrorData, bool syncEvents = true, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String filename The filename. String arguments The arguments. ProcessRunner.ProcessDataReceivedCallback onOutputData The on output data. ProcessRunner.ProcessDataReceivedCallback onErrorData The on error data. Boolean syncEvents if set to true the next data callback will wait until the current one completes. CancellationToken ct The cancellation token. Returns Type Description Task < Int32 > Value type will be -1 for forceful termination of the process. Examples The following example illustrates how to run an external process using the RunProcessAsync(String, String, ProcessRunner.ProcessDataReceivedCallback, ProcessRunner.ProcessDataReceivedCallback, Boolean, CancellationToken) method. class Example { using System.Diagnostics; using System.Text; using System.Threading.Tasks; using Swan; using Swan.Components; static async Task Main() { // Execute a process asynchronously var data = await ProcessRunner .RunProcessAsync(\"dotnet\", \"--help\", Print, Print); // flush all messages Terminal.Flush(); } // a callback to print both output or errors static void Print(byte[] data, Process proc) => Encoding.GetEncoding(0).GetString(data).WriteLine(); } RunProcessAsync(String, String, String, ProcessRunner.ProcessDataReceivedCallback, ProcessRunner.ProcessDataReceivedCallback, Encoding, Boolean, CancellationToken) Runs an external process asynchronously, providing callbacks to capture binary data from the standard error and standard output streams. The callbacks contain a reference to the process so you can respond to output or error streams by writing to the process' input stream. The exit code (return value) will be -1 for forceful termination of the process. Declaration public static Task<int> RunProcessAsync(string filename, string arguments, string workingDirectory, ProcessRunner.ProcessDataReceivedCallback onOutputData, ProcessRunner.ProcessDataReceivedCallback onErrorData, Encoding encoding, bool syncEvents = true, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String filename The filename. String arguments The arguments. String workingDirectory The working directory. ProcessRunner.ProcessDataReceivedCallback onOutputData The on output data. ProcessRunner.ProcessDataReceivedCallback onErrorData The on error data. Encoding encoding The encoding. Boolean syncEvents if set to true the next data callback will wait until the current one completes. CancellationToken ct The cancellation token. Returns Type Description Task < Int32 > Value type will be -1 for forceful termination of the process. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.ProcessRunner.ProcessDataReceivedCallback.html": {
    "href": "api/Swan.Components.ProcessRunner.ProcessDataReceivedCallback.html",
    "title": "Delegate ProcessRunner.ProcessDataReceivedCallback | Unosquare SWAN",
    "keywords": "Delegate ProcessRunner.ProcessDataReceivedCallback Defines a delegate to handle binary data reception from the standard output or standard error streams from a process. Namespace : Swan.Components Syntax public delegate void ProcessDataReceivedCallback(byte[] processData, Process process); Parameters Type Name Description Byte [] processData The process data. Process process The process. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.ProcessResult.html": {
    "href": "api/Swan.Components.ProcessResult.html",
    "title": "Class ProcessResult | Unosquare SWAN",
    "keywords": "Class ProcessResult Represents the text of the standard output and standard error of a process, including its exit code. Inheritance Object ProcessResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public class ProcessResult Constructors ProcessResult(Int32, String, String) Initializes a new instance of the ProcessResult class. Declaration public ProcessResult(int exitCode, string standardOutput, string standardError) Parameters Type Name Description Int32 exitCode The exit code. String standardOutput The standard output. String standardError The standard error. Properties ExitCode Gets the exit code. Declaration public int ExitCode { get; } Property Value Type Description Int32 The exit code. StandardError Gets the text of the standard error. Declaration public string StandardError { get; } Property Value Type Description String The standard error. StandardOutput Gets the text of the standard output. Declaration public string StandardOutput { get; } Property Value Type Description String The standard output. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.MessageHubGenericMessage-1.html": {
    "href": "api/Swan.Components.MessageHubGenericMessage-1.html",
    "title": "Class MessageHubGenericMessage<TContent> | Unosquare SWAN",
    "keywords": "Class MessageHubGenericMessage<TContent> Generic message with user specified content. Inheritance Object MessageHubMessageBase MessageHubGenericMessage<TContent> Implements IMessageHubMessage Inherited Members MessageHubMessageBase.Sender Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public class MessageHubGenericMessage<TContent> : MessageHubMessageBase, IMessageHubMessage Type Parameters Name Description TContent Content type to store. Constructors MessageHubGenericMessage(Object, TContent) Initializes a new instance of the MessageHubGenericMessage<TContent> class. Declaration public MessageHubGenericMessage(object sender, TContent content) Parameters Type Name Description Object sender The sender. TContent content The content. Properties Content Contents of the message. Declaration public TContent Content { get; protected set; } Property Value Type Description TContent Implements IMessageHubMessage Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.MessageHubDefaultProxy.html": {
    "href": "api/Swan.Components.MessageHubDefaultProxy.html",
    "title": "Class MessageHubDefaultProxy | Unosquare SWAN",
    "keywords": "Class MessageHubDefaultProxy Default \"pass through\" proxy. Does nothing other than deliver the message. Inheritance Object MessageHubDefaultProxy Implements IMessageHubProxy Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public sealed class MessageHubDefaultProxy : IMessageHubProxy Properties Instance Singleton instance of the proxy. Declaration public static MessageHubDefaultProxy Instance { get; } Property Value Type Description MessageHubDefaultProxy Methods Deliver(IMessageHubMessage, IMessageHubSubscription) Delivers the specified message. Declaration public void Deliver(IMessageHubMessage message, IMessageHubSubscription subscription) Parameters Type Name Description IMessageHubMessage message The message. IMessageHubSubscription subscription The subscription. Implements IMessageHubProxy Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.IMessageHubProxy.html": {
    "href": "api/Swan.Components.IMessageHubProxy.html",
    "title": "Interface IMessageHubProxy | Unosquare SWAN",
    "keywords": "Interface IMessageHubProxy Message proxy definition. A message proxy can be used to intercept/alter messages and/or marshal delivery actions onto a particular thread. Namespace : Swan.Components Syntax public interface IMessageHubProxy Methods Deliver(IMessageHubMessage, IMessageHubSubscription) Delivers the specified message. Declaration void Deliver(IMessageHubMessage message, IMessageHubSubscription subscription) Parameters Type Name Description IMessageHubMessage message The message. IMessageHubSubscription subscription The subscription. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.IMessageHubMessage.html": {
    "href": "api/Swan.Components.IMessageHubMessage.html",
    "title": "Interface IMessageHubMessage | Unosquare SWAN",
    "keywords": "Interface IMessageHubMessage A Message to be published/delivered by Messenger. Namespace : Swan.Components Syntax public interface IMessageHubMessage Properties Sender The sender of the message, or null if not supported by the message implementation. Declaration object Sender { get; } Property Value Type Description Object Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.DependencyContainerResolveOptions.html": {
    "href": "api/Swan.Components.DependencyContainerResolveOptions.html",
    "title": "Class DependencyContainerResolveOptions | Unosquare SWAN",
    "keywords": "Class DependencyContainerResolveOptions Resolution settings. Inheritance Object DependencyContainerResolveOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public class DependencyContainerResolveOptions Properties ConstructorParameters Gets the constructor parameters. Declaration public Dictionary<string, object> ConstructorParameters { get; } Property Value Type Description Dictionary < String , Object > The constructor parameters. Default Gets the default options (attempt resolution of unregistered types, fail on named resolution if name not found). Declaration public static DependencyContainerResolveOptions Default { get; } Property Value Type Description DependencyContainerResolveOptions NamedResolutionFailureAction Gets or sets the named resolution failure action. Declaration public DependencyContainerNamedResolutionFailureAction NamedResolutionFailureAction { get; set; } Property Value Type Description DependencyContainerNamedResolutionFailureAction The named resolution failure action. UnregisteredResolutionAction Gets or sets the unregistered resolution action. Declaration public DependencyContainerUnregisteredResolutionAction UnregisteredResolutionAction { get; set; } Property Value Type Description DependencyContainerUnregisteredResolutionAction The unregistered resolution action. Methods Clone() Clones this instance. Declaration public DependencyContainerResolveOptions Clone() Returns Type Description DependencyContainerResolveOptions Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.DependencyContainerResolutionException.html": {
    "href": "api/Swan.Components.DependencyContainerResolutionException.html",
    "title": "Class DependencyContainerResolutionException | Unosquare SWAN",
    "keywords": "Class DependencyContainerResolutionException An exception for dependency resolutions. Inheritance Object Exception DependencyContainerResolutionException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Swan.Components Syntax [Serializable] public class DependencyContainerResolutionException : Exception, ISerializable, _Exception Constructors DependencyContainerResolutionException(Type) Initializes a new instance of the DependencyContainerResolutionException class. Declaration public DependencyContainerResolutionException(Type type) Parameters Type Name Description Type type The type. DependencyContainerResolutionException(Type, Exception) Initializes a new instance of the DependencyContainerResolutionException class. Declaration public DependencyContainerResolutionException(Type type, Exception innerException) Parameters Type Name Description Type type The type. Exception innerException The inner exception. Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception See Also Exception Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.CsProjFile-1.html": {
    "href": "api/Swan.Components.CsProjFile-1.html",
    "title": "Class CsProjFile<T> | Unosquare SWAN",
    "keywords": "Class CsProjFile<T> Represents a CsProjFile (and FsProjFile) parser. Inheritance Object CsProjFile<T> Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public class CsProjFile<T> : IDisposable where T : CsProjMetadataBase Type Parameters Name Description T The type of CsProjMetadataBase . Remarks Based on https://github.com/maartenba/dotnetcli-init . Constructors CsProjFile(Stream, Boolean) Initializes a new instance of the CsProjFile<T> class. Declaration public CsProjFile(Stream stream, bool leaveOpen = false) Parameters Type Name Description Stream stream The stream. Boolean leaveOpen if set to true [leave open]. Exceptions Type Condition ArgumentException Project file is not of the new .csproj type. CsProjFile(String) Initializes a new instance of the CsProjFile<T> class. Declaration public CsProjFile(string filename = null) Parameters Type Name Description String filename The filename. Properties Metadata Gets the metadata. Declaration public T Metadata { get; } Property Value Type Description T The nu get metadata. Methods Dispose() Declaration public void Dispose() Save() Saves this instance. Declaration public void Save() Implements System.IDisposable See Also IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Abstractions.html": {
    "href": "api/Swan.Abstractions.html",
    "title": "Namespace Swan.Abstractions | Unosquare SWAN",
    "keywords": "Namespace Swan.Abstractions Classes ServiceBase Mimic a Windows ServiceBase class. Useful to keep compatibility with applications running as services in OS different to Windows. ThreadWorkerBase Provides a base implementation for application workers that perform continuous, long-running tasks. This class provides the ability to perform fine-grained control on these tasks. TimerWorkerBase Provides a base implementation for application workers. WorkerBase Provides base infrastructure for Timer and Thread workers. WorkerDelayProvider Represents a class that implements delay logic for thread workers. Interfaces IEmailSender Represents an interface for e-mail sender. Enums WorkerBase.StateChangeRequest Enumerates all the different state change requests. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Abstractions.ThreadWorkerBase.html": {
    "href": "api/Swan.Abstractions.ThreadWorkerBase.html",
    "title": "Class ThreadWorkerBase | Unosquare SWAN",
    "keywords": "Class ThreadWorkerBase Provides a base implementation for application workers that perform continuous, long-running tasks. This class provides the ability to perform fine-grained control on these tasks. Inheritance Object WorkerBase ThreadWorkerBase Implements IDisposable Inherited Members WorkerBase.Name WorkerBase.Period WorkerBase.WorkerState WorkerBase.IsDisposed WorkerBase.IsDisposing WorkerBase.DefaultPeriod WorkerBase.IsStopRequested WorkerBase.CycleStopwatch WorkerBase.StateChangeRequests WorkerBase.CycleCompletedEvent WorkerBase.StateChangedEvent WorkerBase.CycleCancellation WorkerBase.StateChangeTask WorkerBase.Dispose() WorkerBase.Dispose(Boolean) WorkerBase.OnCycleException(Exception) WorkerBase.ExecuteCycleLogic(CancellationToken) WorkerBase.OnStateChangeProcessed(WorkerState, WorkerState) WorkerBase.ComputeCycleDelay(WorkerState) Namespace : Swan.Abstractions Syntax public abstract class ThreadWorkerBase : WorkerBase, IDisposable Constructors ThreadWorkerBase(String, ThreadPriority, TimeSpan, IWorkerDelayProvider) Initializes a new instance of the ThreadWorkerBase class. Declaration protected ThreadWorkerBase(string name, ThreadPriority priority, TimeSpan period, IWorkerDelayProvider delayProvider) Parameters Type Name Description String name The name. ThreadPriority priority The thread priority. TimeSpan period The interval of cycle execution. IWorkerDelayProvider delayProvider The cycle delay provide implementation. ThreadWorkerBase(String, TimeSpan) Initializes a new instance of the ThreadWorkerBase class. Declaration protected ThreadWorkerBase(string name, TimeSpan period) Parameters Type Name Description String name The name. TimeSpan period The execution interval. Properties DelayProvider Provides an implementation on a cycle delay provider. Declaration protected IWorkerDelayProvider DelayProvider { get; } Property Value Type Description IWorkerDelayProvider Methods ExecuteCycleDelay(Int32, Task, CancellationToken) Suspends execution queues a new new cycle for execution. The delay is given in milliseconds. When overridden in a derived class the wait handle will be set whenever an interrupt is received. Declaration protected virtual void ExecuteCycleDelay(int wantedDelay, Task delayTask, CancellationToken token) Parameters Type Name Description Int32 wantedDelay The remaining delay to wait for in the cycle. Task delayTask Contains a reference to a task with the scheduled period delay. CancellationToken token The cancellation token to cancel waiting. OnDisposing() This method is called automatically when Dispose() is called. Makes sure you release all resources within this call. Declaration protected override void OnDisposing() Overrides WorkerBase.OnDisposing() PauseAsync() Declaration public override Task<WorkerState> PauseAsync() Returns Type Description Task < WorkerState > Overrides WorkerBase.PauseAsync() ResumeAsync() Declaration public override Task<WorkerState> ResumeAsync() Returns Type Description Task < WorkerState > Overrides WorkerBase.ResumeAsync() StartAsync() Declaration public override Task<WorkerState> StartAsync() Returns Type Description Task < WorkerState > Overrides WorkerBase.StartAsync() StopAsync() Declaration public override Task<WorkerState> StopAsync() Returns Type Description Task < WorkerState > Overrides WorkerBase.StopAsync() Implements System.IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "wiki/Home.html": {
    "href": "wiki/Home.html",
    "title": "Swan Wiki | Unosquare SWAN",
    "keywords": "Swan Wiki This wiki is designed for application developers who wish to learn Swan mostly by example. It tries to cover the most important scenarios and capabilities of the library. We are open to contributions of all kinds including code and documentation. Index Terminal: An all-in-one, thread-safe, easy to use, standard otuput writer, standard error writer, diagnostics writer, log message forwarder, and standard input reader. Use the Swan Terminal to replace your typical Console.WriteLine and Debug.WriteLine calls with something useful and professional. Runtime: A cross-platform application information and component provider. Call the Swan Runtime to extract useful details about the your application's runtime environment. Use cases include creating single instance applications, obtaining application metadata, getting a list of loaded assemblies, and using the built-in IoC Container and Message hub components. Network: Swan contains multiple networking components, but the root Network class easily lets you do stuff like querying DNS records of any kind, obtaining the date and time from an NTP server, finding out your public IP address, and retrieving network interface configuration of the host machine. AppWorkerBase: Located under the Abstractions namespace, it provides a base class for implementing background application tasks or services. For example, a good use case for extending this class would be to call a REST service on a given time interval or schedule and react accordingly, depending on the result of the call. SettingsProvider: Provides an easy way of implementing JSON-based, strongly-typed configuration files that are well-documented. Simply create a POCO object, annotate your properties with System.ComponentModel.DataAnnotations such as Display and DefaultValue and start reading and writing settings via SettingsProvider<MyAppSettings>.Instance SingletonBase: An abstract class that is used to implement the singleton pattern. Simply extend by declaring class MySingleton : SignletonBase<MySingleton> and ensure there is a private, parameterless constructor. ArgumentParser: Provides a way to create an argument scheme for your CLI application, daemon or service. It allows you to document, validate and parse command-line arguments for your own application as a strongly typed object. Simply create a POCO, annotate its properties with ArgumentOption attributes and call ArgumentParser.Default.ParseArguments(args, optionsInstance) DependencyContainer: A lightweight IoC Container to help you write applications that are decoupled from concrete types. It is capable of managing the life cycle of named and unnamed registrations. The recommended use of this component is to call it via Runtime.Container . MessageHub: A simple Publisher-Subscriber pattern implementation. It's a good alternative when your application requires independent, long-running processes to communicate with each other without the need for events which can make code difficult to write and maintain. The recommended use of this component is to call it via Runtime.Messages . ProcessRunner: A very easy-to-use process launcher. Good usage scenarios include reading the output stream of program that produces binary data such as a video encoder or video decoder, or simply implementing OS-specific functionality by calling the command and parsing the output. The ProcessRunner supports various ways of calling external processes but here is a very simple example: var data = await ProcessRunner.GetProcessOutputAsync(\"dotnet\", \"--help\"); BitmapBuffer: It keeps coming up as a forum question all the time: efficiently converting back and forth between a bitmap and a byte array is not a straight-forward task for most. BitmapBuffer converts and image into an array of bytes, lets you change those bytes, and turn those bytes back into a Bitmap . -- And it does so very quickly and efficiently. CsvReader and CsvWriter: A lot of the times, us developers are in need of a simple, lightweight CSV reader and writer. Swan provides both: It lets you write CSV data directly as a collection of values, a collection of strings or more conveniently, as objects. When it comes to reading CSV data, it can also parse it as objects or output the values of each row of CSV as a list of strings. Json: An alternative to the beloved JSON.NET. Use this JSON serializer/deserializer for simple scenarios. It handles collections, arrays, objects and primitives seamlessly. It's fast, it avoids circular references automatically, and it is suitable for most, non-complex scenarios. Connection: Represents a TCP network connection either on the server or on the client. It provides access to the input and output network streams. It is capable of working in 2 modes. Typically on the server side you will need to enable continuous reading and events. On the client side you may want to disable continuous reading and use the Read methods available. Use the Connection class to write client-server software. ConnectionListener: TCP Listener manager with built-in events and asynchronous functionality. This networking component is typically used when writing server software. JsonClient: Easily make authenticated or unauthenticated HTTP REST service calls from your application. It can be as easy as calling the GET method and parsing JSON data automatically: var response = await JsonClient.Get<ServiceResponse>(\"https://www.some-domain-here.com/api\"); SmtpClient: The standard SMTP client in the .NET framework chokes when sending multiple items in parallel. Swan's SMTP client proves more robust and capable of handling simultaneous delivery of SMTP messages. Extensions: Importing the Unosquare.Swan namespace will instantly give you a number of useful extension methods tailored for byte arrays, dates, strings, and value types in general."
  },
  "README.html": {
    "href": "README.html",
    "title": "SWAN: Stuff We All Need (Unosquare's collection of C# extension methods and classes) | Unosquare SWAN",
    "keywords": "SWAN: Stuff We All Need (Unosquare's collection of C# extension methods and classes) ⭐ Please star this project if you find it useful! SWAN stands for Stuff We All Need Repeating code and reinventing the wheel is generally considered bad practice. At Unosquare we are committed to beautiful code and great software. Swan is a collection of classes and extension methods that we (and other good developers) have written and evolved over the years. We found ourselves copying and pasting the same code for every project every time we started them. We decided to kill that cycle once and for all. This is the result of that idea. Our philosophy is that Swan should have no external dependencies, it should be cross-platform, and it should be useful. Table of contents 📚 Libraries 💾Installation What's in the library The Runtime component The Terminal class The Json formatter The CsvWriter class The CsvReader class The JsonClient class The SmtpClient class The ObjectMapper component The Network component The ObjectComparer component The ObjectValidator component The DependencyContainer component The MessageHub component The LdapConnection class The ProcessRunner class The ArgumentParser component The SettingsProvider abstraction The Connection class The Benchmark component The DelayProvider component The WaitEventFactory component Atomic Types Running Unit Tests 📚 Libraries We offer the Swan library in two flavors since version 0.24. Swan Lite provides basic classes and extension methods and Swan Standard (we call it Fat Swan) provides everything in Swan Lite plus Network, WinServices, DI and more. See the following table to understand the components available to these flavors of Swan. Component Swan Lite Swan Standard ArgumentParser ✔️ ✔️ ByteArrayExtensions ✔️ ✔️ CircularBuffer ❌ ✔️ Connection ❌ ✔️ ConnectionListener ❌ ✔️ CsProjFile ❌ ✔️ CsvReader ✔️ ✔️ CsvWriter ✔️ ✔️ DateExtensions ✔️ ✔️ DateTimeSpan ✔️ ✔️ Definitions ✔️ ✔️ DependencyContainer ❌ ✔️ EnumHelper ✔️ ✔️ Extensions ✔️ ✔️ FunctionalExtensions ✔️ ✔️ Json ✔️ ✔️ JsonClient ❌ ✔️ MessageHub ❌ ✔️ Network ❌ ✔️ NetworkExtensions ❌ ✔️ ObjectComparer ✔️ ✔️ ObjectMapper ✔️ ✔️ ObjectValidator ✔️ ✔️ ProcessRunner ❌ ✔️ ReflectionExtensions ✔️ ✔️ Runtime ✔️ ✔️ SettingsProvider ✔️ ✔️ SingletonBase ✔️ ✔️ SmtpClient ❌ ✔️ SnmpClient ❌ ✔️ StringExtensions ✔️ ✔️ Terminal ✔️ ✔️ TypeCache ✔️ ✔️ ValueTypeExtensions ✔️ ✔️ WorkerBase ❌ ✔️ If you are developing an ASP.NET Core application, we recommend to use SWAN AspNet.Core . 💾 Installation: Swan Standard Installation: PM> Install-Package Unosquare.Swan Swan Lite Installation: PM> Install-Package Unosquare.Swan.Lite What's in the library In this section, we present the different components that are available in the Swan library. Please keep in mind that everything in the library is opt-in. Swan is completely opt-in. It won't force you to use any of its components, classes or methods. The Runtime component Runtime provides properties and methods that provide information about the application environment (including Assemblies and OS) and access to singleton instance of other components inside Swan such as ObjectMapper . Runtime API Doc The Terminal class Many times, we find ourselves implementing Console output code as some NLog or Log4Net logger or adapter, especially when writing console applications, daemons, and Windows services or Linux daemons. We also tend to write Console code for reading user input because it can't be some logger or adapter. And then you have the System.Diagnostics.Debug class to write to the debugger output. And finally, all your Console user interaction looks primitive and unprofessional. In other words, you end up with 3 things you are unsure of how to put together in the different configurations and runtime environments: Console , Debug and some logging mechanism. In return you have placed unintended logging code, Console code, and Debug code everywhere in your application and it makes it look silly, bloated and written by an amateur. The Swan Terminal is all of the following: Console Standard Output Writer Console Standard Error Writer Debug Writer Console Standard Input Reader Log message forwarder It is also very easy to use, it's thread-safe, and it does not require you to learn anything new. In fact, it simplifies logging messages and displaying Console messages by providing string extension methods. Terminal API Doc Example 1: Writing to the Terminal This only writes messages out to the TerminalWriters if there are any available. In practice, we typically DO NOT use the Write and WriteLine methods but they are provided for convenience, extensibility and customization. Please note that these methods do not forward messages as logging events and therefore whatever is written via these methods will not show up in you logging subsystem. // The simplest way of writing a line of text -- equivalent to `Console.WriteLine`: Terminal.WriteLine($\"Hello, today is {DateTime.Today}\"); // A slightly better way using extension methods: $\"Hello, today is {DateTime.Today}\".WriteLine(); // Now, let's add some color: $\"Hello, today is {DateTime.Today}\".WriteLine(ConsoleColor.Green); // Write it out to the debugger as well! $\"Hello, today is {DateTime.Today}\".WriteLine(ConsoleColor.Green, TerminalWriters.StandardOutput | TerminalWriters.Diagnostics); // You could have also set the color argument to null and just use the configured default $\"Hello, today is {DateTime.Today}\".WriteLine(null, TerminalWriters.StandardOutput | TerminalWriters.Diagnostics); Example 2: Basic Logging This is where Terminal really shines. Instead of using the Write and WriteLine methods, you can use the methods that are intended for logging. These methods have different purposes and distinct functionality. Please refer to the example below and its comments. $\"Hello, today is {DateTime.Today}\".Info(); $\"Hello, today is {DateTime.Today}\".Debug(); $\"Hello, today is {DateTime.Today}\".Warn(); $\"Hello, today is {DateTime.Today}\".Error(); $\"Hello, today is {DateTime.Today}\".Trace(); Example 3: Forwarding Logging Messages Suppose you have various calls to Terminal 's logging methods such as Info() , Warn() , Error() , Trace() and Debug() . You wish to forward those messages to a logging subsystem in addition to using the Console 's standard output and standard error, and the built-in diagnostics output. All you have to do is subscribe to the Terminal's OnLogMessageReceived event. The event arguments of this event provide useful properties that you can piece together to send your logging messages directly to the Logging subsystem in your application. Example 4: Configuring Output Swan's Terminal provides both, flexibility and consistency for all of its output. While it will pick the most common defaults for a given build or runtime scenario, you are able to modify such defaults and adjust them to your liking. You can change the output colors, Example 5: User Interaction The Swan Terminal would not be complete without a way to read user input. The good news is that Terminal can create decent-looking user prompts if a very convenient way. // Reads a line of text from the console. var lineResult = Terminal.ReadLine(); // Reads a number from the input. If unable to parse, it returns the default number, in this case (default 0). var numberResult = Terminal.ReadNumber(\"Read Number\", 0); // Creates a table prompt where the user can enter an option based on the options dictionary provided. var promptResult = Terminal.ReadPrompt(\"Read Promp\", options, \"A\"); // Reads a key from the terminal preventing the key from being echoed. var keyResult = Terminal.ReadKey(\"Read Key\"); Example 6: Other Useful Functions Swan's Terminal also provides additional methods to accomplish very specific tasks. Given the fact that Terminal is an asynchronous, thread-safe output queue, we might under certain situations require all of the output queues to be written out to the Console before the program exits. For example, when we write a console application that requires its usage to be fully printed out before the process is terminated. In these scenarios, we use Terminal.Flush which blocks the current thread until the entire output queue becomes empty. The Json Formatter You can serialize and deserialize strings and objects using Swan's Json Formatter. It's a great way to transform objects to JSON format and vice versa. For example, you need to send information as JSON format to another point of your application and when arrives it's necessary to get back to the object that is going to be used, and thanks to JSON format the data can interchange in a lightweight way. Json API Doc Example 1: Serialize Serializes the specified object into a JSON string . // The object to be serialize var basicObject = new { One = \"One\", Two = \"Two\", Three = \"Three\" }; // Serializes the specified object into a JSON string. var data = Json.Serialize(basicObject); Example 2: Serialize included properties Serializes the specified object only including the specified property names. // The object to be serialize var basicObject = new { One = \"One\", Two = \"Two\", Three = \"Three\" }; // The included names var includedNames = new[] { \"Two\", \"Three\" }; // Serialization Only. var data = Json.SerializeOnly(basicObject, true, includedNames); Example 3: Serialize excluding properties Serializes the specified object excluding the specified property names. // The object to be serialize var basicObject = new { One = \"One\", Two = \"Two\", Three = \"Three\" }; // The excluded names var excludeNames = new[] { \"Two\", \"Three\" }; // Serialization Excluding var data = Json.SerializeExcluding(basicObject, true, excludeNames); Example 4: Serialize an object using attributes Serializes the specified object whose properties have a JsonPropertyAttribute class JsonPropertyExample { [JsonProperty(\"data\")] public string Data { get; set; } [JsonProperty(\"ignoredData\", true)] public string IgnoredData { get; set; } } var obj = new JsonPropertyExample() { Data = \"OK\", IgnoredData = \"OK\" }; // {\"data\": \"OK\"} var serializedObj = Json.Serialize(obj); Example 5: Deserialize Deserializes the specified JSON string as either a Dictionary<string, object> or as a List<object> depending on the syntax of the JSON string . // The json to be deserialize var basicJson = \"{\\\"One\\\":\\\"One\\\",\\\"Two\\\":\\\"Two\\\",\\\"Three\\\":\\\"Three\\\"}\"; // Deserializes the specified json into Dictionary<string, object>. var data = Json.Deserialize(basicJson); Example 6: Deserialize a generic type <T> Deserializes the specified JSON string and converts it to the specified object type. Non-public constructors and property setters are ignored. // The json Type BasicJson to be deserialize var basicJson = \"{\\\"One\\\":\\\"One\\\",\\\"Two\\\":\\\"Two\\\",\\\"Three\\\":\\\"Three\\\"}\"; // Deserializes the specified string in a new instance of the type BasicJson. var data = Json.Deserialize<BasicJson>(basicJson); The CsvWriter class Many projects require the use of CSV files to export and import data. With CsvWriter you can easily write objects and data to CSV format. It also provides a useful way to save data into a file. CsvWriter API Doc Example 1: Writing a List of objects This is the way to write a list of objects into a CSV format. // The list of objects to be written as CSV var basicObj = new List<BasicJson>(); using (var stream = new MemoryStream(Encoding.ASCII.GetBytes(basicObj.ToString()))) { // The CSV writer var reader = new CsvWriter(stream); }; Example 2: Writing a List of objects into a file You also can write the object into a file or a temporal file. // The list of objects to be written as CSV var basicObj = new List<BasicJson>(); // This is where the object is save into a file CsvWriter.SaveRecords(basicObj, \"C:/Users/user/Documents/CsvFile\"); The CsvReader class When you need to parse data in CSV files you'll always need an easy way to read and load their contents into lists and classes that are usable by your application. Swan provides the CsvReader class to read and load CSV files into objects. CsvReader API Doc Example 1: Reading a CSV data string This is a way to read CSV formatted string. // The data to be read var data = @\"Company,OpenPositions,MainTechnology,Revenue Co,2,\"\"C#, MySQL, JavaScript, HTML5 and CSS3\"\",500 Ca,2,\"\"C#, MySQL, JavaScript, HTML5 and CSS3\"\",600\"; using (var stream = new MemoryStream(Encoding.UTF8.GetBytes(data))) { // The CSV reader var reader = new CsvReader(stream, true, Encoding.UTF8); }; Example 2: Reading a CSV file From a CSV file, you can read and load the information into a generic list. // The list of object to be written as CSV var basicObj = new List<BasicJson>(); // This is where the object is save into a file CsvWriter.SaveRecords(basicObj, \"C:/Users/user/Documents/CsvFile\"); // This is how you can load the records of the CSV file var loadedRecords = CsvReader.LoadRecords<BasicJson>(\"C:/Users/user/Documents/CsvFile\"); The JsonClient class Represents a wrapper HttpClient with extended methods to use with JSON payloads and bearer tokens authentication. JsonClient API Doc Example 1: Authentication You can add Authentication to your requests easily. // The Authenticate var data = JsonClient.Authenticate(\"https://mywebsite.com/api/token\", \"admin\", \"password\"); Example 2: An HTTP GET request An easy way to HTTP GET using JsonClient . // The GET var data = JsonClient.Get<BasicJson>(\"https://mywebsite.com/api/data\"); Example 3: An HTTP POST request An easy way to HTTP POST using JsonClient . // The POST var data = JsonClient.Post<BasicJson>(\"https://mywebsite.com/api/data\", new { filter = true }); Example 4: Making a PUT An easy way to HTTP PUT using JsonClient . // The PUT var data = JsonClient.Put<BasicJson>(\"https://mywebsite.com/api/data\", new { filter = true }); The SmtpClient class It's a basic SMTP client that can submit messages to an SMTP server. It's very easy to configure and it provides a very handy way to make send email messages in your application. SmtpClient API Doc Example 1: Using System.Net.Mail.MailMessage SmtpClient uses the classic System.Net.Mail.MailMessage provided by .NET to send emails asynchronously. // Create a new smtp client using google's smtp server var client = new SmtpClient(\"smtp.gmail.com\", 587); // Send an email client.SendMailAsync(new MailMessage(\"sender@test.com\", \"recipient@test.cm\", \"Subject\", \"Body\")); Example 2: Using a SMTP session state // Create a new session state with a sender address var session = new SmtpSessionState {SenderAddress = \"sender@test.com\"}; // Add a recipient session.Recipients.Add(\"recipient@test.cm\"); // Send client.SendMailAsync(session); Example 3: Adding an attachment with SMTP session state When using SmtpSessionState you have to deal with raw data manipulation, in order to parse MIME attachments MimeKit is recommended. // Create a new session state with a sender address var session = new SmtpSessionState { SenderAddress = \"sender@test.com\" }; // Add a recipient session.Recipients.Add(\"recipient@test.cm\"); // load a file as an attachment var attachment = new MimePart(\"image\", \"gif\") { Content = new MimeContent(File.OpenRead(\"meme.gif\"), ContentEncoding.Default), ContentDisposition = new ContentDisposition(ContentDisposition.Attachment), ContentTransferEncoding = ContentEncoding.Base64, FileName = Path.GetFileName(\"meme.gif\") }; using (var memory = new MemoryStream()) { //Decode the attachment content attachment.Content.DecodeTo(memory); //Convert it into a byte array and add it to the session DataBuffer session.DataBuffer.AddRange(memory.ToArray()); } // Send client.SendMailAsync(session); The ObjectMapper component The ObjectMapper is a component to translate and copy property data from one type to another. You can access a default instance of ObjectMapper through the Runtime class. ObjectMapper API Doc Example 1: Mapping with default map The conversion generates a map automatically between the properties in the base of the properties names. // Here is mapping the specific user to a destination var destination = Runtime.ObjectMapper.Map<UserDto>(user); Example 2: Mapping with a custom map With CreateMap you generate a new map and you can map one custom property with MapProperty . // Creating an Object Mapper var mapper = new ObjectMapper(); // Creating the map and mapping the property mapper.CreateMap<User, UserDto>().MapProperty(d => d.Role, s => s.Role.Name); // Then you map the custom map to a destination var destination = mapper.Map<UserDto>(user); Example 3: Removing a property from the map To remove a custom property, you also use CreateMap and then remove the custom property of the mapping. // Create an Object Mapper var mapper = new ObjectMapper(); // Creating a map and removing a property mapper.CreateMap<User, UserDto>().RemoveMapProperty(t => t.Name); // Then you map the custom map to a destination var destination = mapper.Map<UserDto>(user); The Network component When you are working with projects related to network or you want to extend your application to use some network functionality the Swan's Network provides miscellaneous network utilities such as a Public IP finder, a DNS client to query DNS records of any kind, and an NTP client. Network API Doc Example 1: IPv4 and adapters information It's always useful to have a tool that gives you access to your adapters information and your IP address local and public and use it in your application. // Gets the active IPv4 interfaces. var interfaces = Network.GetIPv4Interfaces(); // Retrieves the local IP addresses. var address = Network.GetIPv4Addresses(); // Gets the public IP address using ipify.org. var publicAddress = Network.GetPublicIPAddress(); Example 2: DNS and NTP Also, you can use the Network utility to access the IPs of the DNS servers and the UTC from the NTP servers. // Gets the configured IPv4 DNS servers for the active network interfaces. var dnsServers = Network.GetIPv4DnsServers(); // Gets the DNS host entry (a list of IP addresses) for the domain name. var dnsAddresses = Network.GetDnsHostEntry(\"google-public-dns-a.google.com\"); // Gets the reverse lookup FQDN of the given IP Address. var dnsPointer = Network.GetDnsPointerEntry(IPAddress.Parse(\"8.8.8.8\")); // Queries the DNS server for the specified record type. var mxRecord = Network.QueryDns(\"google-public-dns-a.google.com\", DnsRecordType.MX); // Gets the UTC time by querying from an NTP server var dateTime = Network.GetNetworkTimeUtc(); The ObjectComparer component Many times, you need to compare the values inside of an object, array, struct or enum, to do so you need to implement your own code or iterate to find if the values are equals. With ObjectComparer you easily compare the properties. It represents a quick object comparer using the public properties of an object or the public members in a structure. ObjectComparer API Doc // Compare if two variables of the same type are equal. ObjectComparer.AreEqual(first, second) // Compare if two objects of the same type are equal. ObjectComparer.AreObjectsEqual(first, second); // Compare if two structures of the same type are equal. ObjectComparer.AreStructsEqual(first, second) // Compare if two enumerables are equal. ObjectComparer.AreEnumsEqual(first, second) The ObjectValidator component A simple object validator that allows you to set custom validations and identify if an object satisfies them. ObjectValidator API Doc ObjectValdiationResult API Doc Example 1: Simple object validation Our Simple class to validate public class Simple { public string Name { get; set; } } // create an instance of ObjectValidator var obj = new ObjectValidator(); // Add a validation to the 'Simple' class with a custom error message obj.AddValidator<Simple>(x => !string.IsNullOrEmpty(x.Name), \"Name must not be empty\"); // validate and return a boolean var res = obj.IsValid(new Simple { Name = \"Name\" }); Example 2: Using Attributes Both IsValid and Validate methods verify that the object satisfies all custom validators and/or attributes, but instead of just returning a boolean, Validate returns a ObjectValidatorResult which includes all the errors with their properties. Our Simple class to validate public class Simple { [NotNull] public string Name { get; set; } [Range(1, 10)] public int Number { get; set; } [Email] public string Email { get; set; } } This time we'll be using both custom validators and attributes // using the Runtime's ObjectValidator singleton Runtime.ObjectValidator.AddValidator<Simple>(x => !x.Name.Equals(\"Name\"), \"Name must not be 'Name'\"); var res = Runtime.ObjectValidator.Validate(new Simple{ Name = \"name\", Number = 5, Email =\"email@mail.com\"}) Example 3: Using the extension method In this example, we'll use the previous Sample class to validate an object using the built-in extension method which in turn uses the Runtime 's ObjectValidator singleton to validate our object. // using the Runtime's ObjectValidator singleton Runtime.ObjectValidator.AddValidator<Simple>(x => !x.Name.Equals(\"Name\"), \"Name must not be 'Name'\"); // using the extension method var res = new Simple{ Name = \"name\", Number = 5, Email =\"email@mail.com\"}.IsValid(); The DependencyContainer component It's an easy to use IoC Inversion of Control Container of your classes and interfaces, you can register and associate your class with the interface that is going to use and then when you finish working with that you can unregister them. You can access a singleton instance of DependencyContainer called Current by DependencyContainer class. DependencyContainer API Doc Example 1: Basic Example // Initialize a new instance of DependencyContainer var container = new DependencyContainer(); // Creates/replaces a named container class registration with a given implementation and default options. container.Register<IAnimal, Cat>(); // Attempts to resolve a type using specified options. var resolve = container.Resolve<IAnimal>(); // Remove a named container class registration. container.Unregister<IAnimal>(); Example 2: Using the DependencyContainer Current singleton // Creates/replaces a named container class registration with a given implementation and default options. DependencyContainer.Current.Register<IAnimal, Dog>(); // Attempts to resolve a type using specified options. var resolve = DependencyContainer.Current.Resolve<IAnimal>(); // Remove a named container class registration. DependencyContainer.Current.Unregister<IAnimal>(); Example 3: CanResolve A very handy method to determine if a type can be resolved. // Using CanResolve to check if type can be resolve if (Runtime.Container.CanResolve<IAnimal>()) { // Attempts to resolve a type using specified options. Runtime.Container.Resolve<IAnimal>(); } The MessageHub component A simple Publisher-Subscriber pattern implementation. It's a good alternative when your application requires independent, long-running processes to communicate with each other without the need for events which can make code difficult to write and maintain. MessageHub API Doc In many scenarios you need a way to know when something happens to an object, there are usually two ways of achieving this: constantly checking the object's properties or using the pub-sub pattern. To avoid any problems caused by the former method like a possible modification of the object's properties it is a good practice to use the latter. With the pub-sub pattern, any object can \"subscribe\" to the publisher's publish event. When a message is \"published\" the event is triggered and the custom content of the message is sent. Neither the publisher nor the subscriber knows the existence of one another, therefore the publisher does not directly notify its subscribers, instead there is another component called MessageHub which is known by both(subscriber and publisher) and that filters all incoming messages and distributes them accordingly. Example 1: Subscribing to a MessageHub A simple example using the DependencyContainer discussed above. Keep in mind that in this example both the subscription and the message sending are done in the same place but this is only for explanatory purposes. // use DependencyContainer to create an instance of MessageHub var messageHub = DependencyContainer.Current.Resolve<IMessageHub>() as MessageHub; // create an instance of the publisher class which has a string as its content var message = new MessageHubGenericMessage<string>(this, \"SWAN\"); // subscribe to the publisher's event and just print its content which is a string // a token is returned which can be used to unsubscribe later on var token = messageHub.Subscribe<MessageHubGenericMessage<string>>(m => m.Content.Info()); //publish a message and SWAN should be printed on the console messageHub.Publish(message); // unsuscribe, we will no longer receive any messages messageHub.Unsubscribe<MessageHubGenericMessage<string>>(token); The LDAPConnection class The LDAP Client was moved to a standalone assembly at SWAN LDAP . The ProcessRunner class A class that provides methods that helps us create external processes and capture their output. ProcessRunner API Doc Example 1: Running a process async RunProcessAsync runs an external process asynchronously and returns the exit code. It provides error and success callbacks to capture binary data from the output and error stream. // executes a process and returns the exit code var result = await ProcessRunner.RunProcessAsync( // The path of the program to be executed \"dotnet\", //Parameters \"--help\", // A success callback with a reference to the output and the process itself (data, proc) => { // If it executes correctly, print the output Encoding.GetEncoding(0).GetString(data).WriteLine(); }, // An error callback with a reference to the error and the process itself (data, proc) => { // If an error ocurred, print out the error Encoding.GetEncoding(0).GetString(data).WriteLine(); } ); Example 2: Getting a process output If you are more concern about the output than the process itself, you can use GetProcessOutputAsync to get just a string containing either the output or the error text. // Execute a process asynchronously and return either the ouput or the error var data = await ProcessRunner.GetProcessOutputAsync(\"dotnet\", \"--help\"); // Print the result data.WriteLine(); Example 3: Getting a process result If you don't want to deal with callbacks but you need more information after running an external process, you can use GetProcessResultAsync to get not just the output and error texts but also the exit code. // Execute a process asynchronously and returns a ProcessResult object var data = await ProcessRunner.GetProcessResultAsync(\"dotnet\", \"--help\"); // Print out the exit code $\"{data.ExitCode}\".WriteLine(); // The output data.StandardOutput.WriteLine(); // And the error data.StandardError.WriteLine(); Keep in mind that both GetProcessOutputAsync and GetProcessResultAsync are meant to be used for programs that output a relatively small amount of text The ArgumentParser component This component allows us to parse command line arguments and reconstruct those values into an object, making them much easier to manipulate. ArgumentParser API Doc Example 1: Using basic options In order to parse arguments first, we need to create a class which the arguments will be parsed into using the ArgumentOption attribute. In order to set an ArgumentOption , we need to supply at least a short name, a long name or both internal class Options { // This attribute maps a command line option to a property // with 'v' as its short name and 'verbose' as its long name [ArgumentOption('v', \"verbose\", HelpText = \"Set verbose mode.\")] public bool Verbose { get; set; } [ArgumentOption('u', Required = true, HelpText = \"Set user name.\")] public string Username { get; set; } } When a program is executed using a command line shell, the OS usually allows passing additional information provided along the program name. For instance example.exe -u user will execute example.exe and the additional text will be passed to it, making the additional arguments accessible to the program using the args parameter in the Main method. // the variable args contains all the additional information(arguments) // that were passed during the execution static void Main(string[] args) { // create a new instance of the class that we want to parse the arguments into var options = new Options(); // if everything went out fine the ParseArguments method will return true Runtime.ArgumentParser.ParseArguments(args, options); } Example 2: Using an Array In here the complete argument string will be split into an array using the separator provided. internal class Options { [ArgumentOption('n', \"names\", Separator=',', Required = true, HelpText = \"A list of names separated by a comma\")] public string Names[] { get; set; } } Example 3: Using an Enum This maps the argument --color to an Enum which accepts any of the colors defined in ConsoleColor and sets Red as the default value. internal class Options { [ArgumentOption(\"color\", DefaultValue = ConsoleColor.Red, HelpText = \"Set a color.\")] public ConsoleColor Color { get; set; } } The SettingsProvider abstraction It represents a provider that helps you save and load settings using plain JSON file. SettingsProvider API Doc Example 1: Loading and saving settings Here we define a Settings class that contains all the properties we want. internal class Settings { public int Port { get; set; } = 9696; public string User { get; set; } = \"User\"; } Once we define our settings we can access them using the Global property inside Instance . //Get user from settings var user = SettingsProvider<Settings>.Instance.Global.User; //Modify the port SettingsProvider<Settings>.Instance.Global.Port = 20; //if we want those settings to persist SettingsProvider<Settings>.Instance.PersistGlobalSettings(); The Connection class It represents a wrapper for TcpClient (a TCP network connection) either on the server or on the client. It provides access to the input and output network streams. It is capable of working in 2 modes. Connection API Doc ConnectionListener API Doc Example 1: Creating an TCP server When dealing with a connection on the server side, continuous reading must be enabled, thus deactivating Read methods. If these methods are used an invalid operation exception will be thrown. This example uses a ConnectionListener which is a TCP listener manager with built-in events and asynchronous functionality. // create a new connection listener on a specific port var connectionListener = new ConnectionListener(1337); // handle the OnConnectionAccepting event connectionListener.OnConnectionAccepted += (s, e) => { // create a new connection with a blocksize of 6 using (var con = new Connection(e.Client,6)) { // an event which will be raised when data is received con.DataReceived += (o, y) => { var response = Encoding.UTF8.GetChars(y.Buffer); }; con.WriteLineAsync(\"world!\").Wait(); } }; connectionListener.Start(); Example 2: Creating an TCP client Continuous reading is usually used on the server side so, you may want to disable them on the client side. // create a new TcpCLient object var client = new TcpClient(); // connect to a specific address and port client.Connect(\"localhost\",1337); //create a new connection with specific encoding, new line sequence and continous reading disabled using (var cn = new Connection(client, Encoding.UTF8, \"\\r\\n\", true, 0)) { await cn.WriteDataAsync(Encoding.UTF8.GetBytes(\"Hello \"), true); var response = await cn.ReadTextAsync(); } The Benchmark component A simple benchmarking class used as an IDisposable that provides useful statistics about a certain piece of code. Benchmark API Doc Example 1: A simple benchmark test //starts a test with a custom name identifier using (Benchmark.Start(\"Test\")) { // do some logic in here } // dump results into a string var results = Benchmark.Dump(); The DelayProvider component A useful component that implements several delay mechanisms. DelayProvider API Doc Example 1: Creating a delay // using the ThreadSleep strategy using (var delay = new DelayProvider(DelayProvider.DelayStrategy.ThreadSleep)) { // retrieve how much time we delayed var time = delay.WaitOne(); } The WaitEventFactory component WaitEventFactory provides a standard ManualResetEvent factory with a unified API. ManualResetEvent is a variation of AutoResetEvent that doesn't automatically reset after a thread is let through on a WaitOne call. Calling Set on a ManualResetEvent serves like an open gate allowing any number of threads that WaitOne pass throughCalling and Reset closes this gate. This type of event is usually used to signal that a certain operation has completed. WaitEventFactory API Doc Example 1: Using the WaitEventFactory // creates a WaitEvent using the slim version of ManualResetEvent private static readonly IWaitEvent waitEvent = WaitEventFactory.CreateSlim(false); static void Main() { // start two tasks Task.Factory.StartNew(() => { Work(1); }); Task.Factory.StartNew(() => { Work(2); }); //Send first signal to retrieve data waitEvent.Complete(); waitEvent.Begin(); Thread.Sleep(TimeSpan.FromSeconds(2)); // Send second signal waitEvent.Complete(); Console.ReadLine(); } static void Work(int taskNumber) { $\"Data retrieved:{taskNumber}\".WriteLine(); waitEvent.Wait(); Thread.Sleep(TimeSpan.FromSeconds(2)); $\"All finished up {taskNumber}\".WriteLine(); } Atomic types Atomic operations are indivisible which means that they cannot interrupted partway through. SWAN provides Atomic types which include mechanisms to perform these kinds of operations on Built-In types like: bool , long , and double . This is quite useful in situations where we have to deal with lots of threads performing writes on variables because we can assure that threads will not interrupt each other in the middle of an operation and perform a torn write . AtomicBoolean API Doc AtomicLong API Doc AtomicDouble API Doc Running Unit Tests If you want to run the .NET Unit test project, you may need to start some services. These services are Javascript files and you need NodeJS to execute them. I know why Javascript files for a .NET project, but it's the easy way to start up some network services, anyway PR with .NET Core services are welcome. Before running them, please execute npm install . This command will install all the required dependencies to start the network services. The following files, located in the root folder, should be run in any order before start running unit tests: ./mail.js - This script will mount a SMTP server, this service is required to run SmtpClient tests. ./web.js - This script will provide a web server responding JSON files for JsonClient tests. ./tcp.js - This script will open a basic TCP Socket for TcpConnection tests. ./ntp.js - This script will mount a NTP server for general Network methods. You can also check the CI files ( Travis and AppVeyor for details how to run them."
  },
  "CODE_OF_CONDUCT.html": {
    "href": "CODE_OF_CONDUCT.html",
    "title": "Contributor Covenant Code of Conduct | Unosquare SWAN",
    "keywords": "Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at geovanni.perez@gmail.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4"
  },
  "api/Swan.Networking.SmtpReplyCodeSeverities.html": {
    "href": "api/Swan.Networking.SmtpReplyCodeSeverities.html",
    "title": "Enum SmtpReplyCodeSeverities | Unosquare SWAN",
    "keywords": "Enum SmtpReplyCodeSeverities Enumerates the reply code severities. Namespace : Swan.Networking Syntax public enum SmtpReplyCodeSeverities Fields Name Description PermanentNegative The permanent negative severity PositiveCompletion The positive completion severity PositiveIntermediate The positive intermediate severity TransientNegative The transient negative severity Unknown The unknown severity Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.SmtpReplyCodeCategories.html": {
    "href": "api/Swan.Networking.SmtpReplyCodeCategories.html",
    "title": "Enum SmtpReplyCodeCategories | Unosquare SWAN",
    "keywords": "Enum SmtpReplyCodeCategories Enumerates the reply code categories. Namespace : Swan.Networking Syntax public enum SmtpReplyCodeCategories Fields Name Description Connections The connections category Information The information category Syntax The syntax category System The system category Unknown The unknown category UnspecifiedA The unspecified a category UnspecifiedB The unspecified b category Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.SmtpDefinitions.html": {
    "href": "api/Swan.Networking.SmtpDefinitions.html",
    "title": "Class SmtpDefinitions | Unosquare SWAN",
    "keywords": "Class SmtpDefinitions Contains useful constants and definitions. Inheritance Object SmtpDefinitions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Networking Syntax public static class SmtpDefinitions Fields SmtpDataCommandTerminator The string sequence that delimits the end of the DATA command. Declaration public const string SmtpDataCommandTerminator = \"\\r\\n.\\r\\n\" Field Value Type Description String Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.SmtpDefinitions.SmtpAuthMethods.html": {
    "href": "api/Swan.Networking.SmtpDefinitions.SmtpAuthMethods.html",
    "title": "Class SmtpDefinitions.SmtpAuthMethods | Unosquare SWAN",
    "keywords": "Class SmtpDefinitions.SmtpAuthMethods Lists the AUTH methods supported by default. Inheritance Object SmtpDefinitions.SmtpAuthMethods Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Networking Syntax public static class SmtpAuthMethods Fields Login The login method. Declaration public const string Login = \"LOGIN\" Field Value Type Description String Plain The plain method. Declaration public const string Plain = \"PLAIN\" Field Value Type Description String Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.DnsResponseCode.html": {
    "href": "api/Swan.Networking.DnsResponseCode.html",
    "title": "Enum DnsResponseCode | Unosquare SWAN",
    "keywords": "Enum DnsResponseCode Enumerates the different DNS query response codes. Namespace : Swan.Networking Syntax public enum DnsResponseCode Fields Name Description FormatError No error NameError Server failure error NoError No error NotAuth Not authorized error NotImplemented Name error NotZone Not zone error NXRRSet NXRR Set error Refused Not implemented error ServerFailure Format error YXDomain Refused error YXRRSet YXRR error Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.DnsRecordType.html": {
    "href": "api/Swan.Networking.DnsRecordType.html",
    "title": "Enum DnsRecordType | Unosquare SWAN",
    "keywords": "Enum DnsRecordType Enumerates the different DNS record types. Namespace : Swan.Networking Syntax public enum DnsRecordType Fields Name Description A A records AAAA A records fot IPv6 ANY ANY records CNAME CNAME records MX MX records NS Nameserver records PTR PTR records SOA SOA records SRV SRV records TXT TXT records WKS WKS records Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.DnsRecordClass.html": {
    "href": "api/Swan.Networking.DnsRecordClass.html",
    "title": "Enum DnsRecordClass | Unosquare SWAN",
    "keywords": "Enum DnsRecordClass Enumerates the different DNS record classes. Namespace : Swan.Networking Syntax public enum DnsRecordClass Fields Name Description ANY ANY records IN IN records Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.DnsRecord.html": {
    "href": "api/Swan.Networking.DnsRecord.html",
    "title": "Class DnsRecord | Unosquare SWAN",
    "keywords": "Class DnsRecord Represents a DNS record entry. Inheritance Object DnsRecord Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Networking Syntax public class DnsRecord Properties CanonicalDomainName Gets the name of the canonical domain. Declaration public string CanonicalDomainName { get; } Property Value Type Description String The name of the canonical domain. Class Gets the class. Declaration public DnsRecordClass Class { get; } Property Value Type Description DnsRecordClass The class. Data Gets the raw data of the record. Declaration public byte[] Data { get; } Property Value Type Description Byte [] The data. DataText Gets the data text bytes in ASCII encoding. Declaration public string DataText { get; } Property Value Type Description String The data text. IPAddress Gets the ip address. Declaration public IPAddress IPAddress { get; } Property Value Type Description IPAddress The ip address. MailExchangerDomainName Gets the name of the mail exchanger domain. Declaration public string MailExchangerDomainName { get; } Property Value Type Description String The name of the mail exchanger domain. MailExchangerPreference Gets the mail exchanger preference. Declaration public int? MailExchangerPreference { get; } Property Value Type Description Nullable < Int32 > The mail exchanger preference. Name Gets the name. Declaration public string Name { get; } Property Value Type Description String The name. NameServerDomainName Gets the name of the name server domain. Declaration public string NameServerDomainName { get; } Property Value Type Description String The name of the name server domain. PointerDomainName Gets the name of the pointer domain. Declaration public string PointerDomainName { get; } Property Value Type Description String The name of the pointer domain. SoaExpireInterval Gets the soa expire interval. Declaration public TimeSpan? SoaExpireInterval { get; } Property Value Type Description Nullable < TimeSpan > The soa expire interval. SoaMasterDomainName Gets the name of the soa master domain. Declaration public string SoaMasterDomainName { get; } Property Value Type Description String The name of the soa master domain. SoaMinimumTimeToLive Gets the soa minimum time to live. Declaration public TimeSpan? SoaMinimumTimeToLive { get; } Property Value Type Description Nullable < TimeSpan > The soa minimum time to live. SoaRefreshInterval Gets the soa refresh interval. Declaration public TimeSpan? SoaRefreshInterval { get; } Property Value Type Description Nullable < TimeSpan > The soa refresh interval. SoaResponsibleDomainName Gets the name of the soa responsible domain. Declaration public string SoaResponsibleDomainName { get; } Property Value Type Description String The name of the soa responsible domain. SoaRetryInterval Gets the soa retry interval. Declaration public TimeSpan? SoaRetryInterval { get; } Property Value Type Description Nullable < TimeSpan > The soa retry interval. SoaSerialNumber Gets the soa serial number. Declaration public long? SoaSerialNumber { get; } Property Value Type Description Nullable < Int64 > The soa serial number. TimeToLive Gets the time to live. Declaration public TimeSpan TimeToLive { get; } Property Value Type Description TimeSpan The time to live. Type Gets the type. Declaration public DnsRecordType Type { get; } Property Value Type Description DnsRecordType The type. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.DependencyContainer.html": {
    "href": "api/Swan.Components.DependencyContainer.html",
    "title": "Class DependencyContainer | Unosquare SWAN",
    "keywords": "Class DependencyContainer The concrete implementation of a simple IoC container based largely on TinyIoC ( https://github.com/grumpydev/TinyIoC ). Inheritance Object DependencyContainer Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public class DependencyContainer : IDisposable Constructors DependencyContainer() Initializes a new instance of the DependencyContainer class. Declaration public DependencyContainer() Properties Current Lazy created Singleton instance of the container for simple scenarios. Declaration public static DependencyContainer Current { get; } Property Value Type Description DependencyContainer Methods AutoRegister(DependencyContainerDuplicateImplementationAction, Func<Type, Boolean>) Attempt to automatically register all non-generic classes and interfaces in the current app domain. Types will only be registered if they pass the supplied registration predicate. Declaration public void AutoRegister(DependencyContainerDuplicateImplementationAction duplicateAction = DependencyContainerDuplicateImplementationAction.RegisterSingle, Func<Type, bool> registrationPredicate = null) Parameters Type Name Description DependencyContainerDuplicateImplementationAction duplicateAction What action to take when encountering duplicate implementations of an interface/base class. Func < Type , Boolean > registrationPredicate Predicate to determine if a particular type should be registered. AutoRegister(IEnumerable<Assembly>, DependencyContainerDuplicateImplementationAction, Func<Type, Boolean>) Attempt to automatically register all non-generic classes and interfaces in the specified assemblies Types will only be registered if they pass the supplied registration predicate. Declaration public void AutoRegister(IEnumerable<Assembly> assemblies, DependencyContainerDuplicateImplementationAction duplicateAction = DependencyContainerDuplicateImplementationAction.RegisterSingle, Func<Type, bool> registrationPredicate = null) Parameters Type Name Description IEnumerable < Assembly > assemblies Assemblies to process. DependencyContainerDuplicateImplementationAction duplicateAction What action to take when encountering duplicate implementations of an interface/base class. Func < Type , Boolean > registrationPredicate Predicate to determine if a particular type should be registered. BuildUp(Object, DependencyContainerResolveOptions) Attempts to resolve all public property dependencies on the given object using the given resolve options. Declaration public void BuildUp(object input, DependencyContainerResolveOptions resolveOptions = null) Parameters Type Name Description Object input Object to \"build up\". DependencyContainerResolveOptions resolveOptions Resolve options to use. CanResolve(Type, String, DependencyContainerResolveOptions) Attempts to predict whether a given type can be resolved with the supplied constructor parameters options. Parameters are used in conjunction with normal container resolution to find the most suitable constructor (if one exists). All user supplied parameters must exist in at least one resolvable constructor of RegisterType or resolution will fail. Note: Resolution may still fail if user defined factory registrations fail to construct objects when called. Declaration public bool CanResolve(Type resolveType, string name = null, DependencyContainerResolveOptions options = null) Parameters Type Name Description Type resolveType Type to resolve. String name The name. DependencyContainerResolveOptions options Resolution options. Returns Type Description Boolean Bool indicating whether the type can be resolved. CanResolve<TResolveType>(String, DependencyContainerResolveOptions) Attempts to predict whether a given named type can be resolved with the supplied constructor parameters options. Parameters are used in conjunction with normal container resolution to find the most suitable constructor (if one exists). All user supplied parameters must exist in at least one resolvable constructor of RegisterType or resolution will fail. Note: Resolution may still fail if user defined factory registrations fail to construct objects when called. Declaration public bool CanResolve<TResolveType>(string name = null, DependencyContainerResolveOptions options = null) where TResolveType : class Parameters Type Name Description String name Name of registration. DependencyContainerResolveOptions options Resolution options. Returns Type Description Boolean Bool indicating whether the type can be resolved. Type Parameters Name Description TResolveType Type to resolve. Dispose() Declaration public void Dispose() GetChildContainer() Gets the child container. Declaration public DependencyContainer GetChildContainer() Returns Type Description DependencyContainer A new instance of the DependencyContainer class. Register(Type, Func<DependencyContainer, Dictionary<String, Object>, Object>, String) Creates/replaces a container class registration with a user specified factory. Declaration public RegisterOptions Register(Type registerType, Func<DependencyContainer, Dictionary<string, object>, object> factory, string name = \"\") Parameters Type Name Description Type registerType Type to register. Func < DependencyContainer , Dictionary < String , Object >, Object > factory Factory/lambda that returns an instance of RegisterType. String name Name of registration. Returns Type Description RegisterOptions RegisterOptions for fluent API. Register(Type, Object, String) Creates/replaces a named container class registration with a specific, strong referenced, instance. Declaration public RegisterOptions Register(Type registerType, object instance, string name = \"\") Parameters Type Name Description Type registerType Type to register. Object instance Instance of RegisterType to register. String name Name of registration. Returns Type Description RegisterOptions RegisterOptions for fluent API. Register(Type, String) Creates/replaces a named container class registration with default options. Declaration public RegisterOptions Register(Type registerType, string name = \"\") Parameters Type Name Description Type registerType Type to register. String name Name of registration. Returns Type Description RegisterOptions RegisterOptions for fluent API. Register(Type, Type, Object, String) Creates/replaces a named container class registration with a specific, strong referenced, instance. Declaration public RegisterOptions Register(Type registerType, Type registerImplementation, object instance, string name = \"\") Parameters Type Name Description Type registerType Type to register. Type registerImplementation Type of instance to register that implements RegisterType. Object instance Instance of RegisterImplementation to register. String name Name of registration. Returns Type Description RegisterOptions RegisterOptions for fluent API. Register(Type, Type, String) Creates/replaces a named container class registration with a given implementation and default options. Declaration public RegisterOptions Register(Type registerType, Type registerImplementation, string name = \"\") Parameters Type Name Description Type registerType Type to register. Type registerImplementation Type to instantiate that implements RegisterType. String name Name of registration. Returns Type Description RegisterOptions RegisterOptions for fluent API. Register<TRegister>(TRegister, String) Creates/replaces a named container class registration with a specific, strong referenced, instance. Declaration public RegisterOptions Register<TRegister>(TRegister instance, string name = \"\") where TRegister : class Parameters Type Name Description TRegister instance Instance of RegisterType to register. String name Name of registration. Returns Type Description RegisterOptions RegisterOptions for fluent API. Type Parameters Name Description TRegister Type to register. Register<TRegister>(Func<DependencyContainer, Dictionary<String, Object>, TRegister>, String) Creates/replaces a named container class registration with a user specified factory. Declaration public RegisterOptions Register<TRegister>(Func<DependencyContainer, Dictionary<string, object>, TRegister> factory, string name = \"\") where TRegister : class Parameters Type Name Description Func < DependencyContainer , Dictionary < String , Object >, TRegister> factory Factory/lambda that returns an instance of RegisterType. String name Name of registration. Returns Type Description RegisterOptions RegisterOptions for fluent API. Type Parameters Name Description TRegister Type to register. Register<TRegister>(String) Creates/replaces a named container class registration with default options. Declaration public RegisterOptions Register<TRegister>(string name = \"\") where TRegister : class Parameters Type Name Description String name Name of registration. Returns Type Description RegisterOptions RegisterOptions for fluent API. Type Parameters Name Description TRegister Type to register. Register<TRegister, TRegisterImplementation>(TRegisterImplementation, String) Creates/replaces a named container class registration with a specific, strong referenced, instance. Declaration public RegisterOptions Register<TRegister, TRegisterImplementation>(TRegisterImplementation instance, string name = \"\") where TRegister : class where TRegisterImplementation : class, TRegister Parameters Type Name Description TRegisterImplementation instance Instance of RegisterImplementation to register. String name Name of registration. Returns Type Description RegisterOptions RegisterOptions for fluent API. Type Parameters Name Description TRegister Type to register. TRegisterImplementation Type of instance to register that implements RegisterType. Register<TRegister, TRegisterImplementation>(String) Creates/replaces a named container class registration with a given implementation and default options. Declaration public RegisterOptions Register<TRegister, TRegisterImplementation>(string name = \"\") where TRegister : class where TRegisterImplementation : class, TRegister Parameters Type Name Description String name Name of registration. Returns Type Description RegisterOptions RegisterOptions for fluent API. Type Parameters Name Description TRegister Type to register. TRegisterImplementation Type to instantiate that implements RegisterType. RegisterMultiple(Type, IEnumerable<Type>) Register multiple implementations of a type. Internally this registers each implementation using the full name of the class as its registration name. Declaration public MultiRegisterOptions RegisterMultiple(Type registrationType, IEnumerable<Type> implementationTypes) Parameters Type Name Description Type registrationType Type that each implementation implements. IEnumerable < Type > implementationTypes Types that implement RegisterType. Returns Type Description MultiRegisterOptions MultiRegisterOptions for the fluent API. RegisterMultiple<TRegister>(IEnumerable<Type>) Register multiple implementations of a type. Internally this registers each implementation using the full name of the class as its registration name. Declaration public MultiRegisterOptions RegisterMultiple<TRegister>(IEnumerable<Type> implementationTypes) Parameters Type Name Description IEnumerable < Type > implementationTypes Types that implement RegisterType. Returns Type Description MultiRegisterOptions MultiRegisterOptions for the fluent API. Type Parameters Name Description TRegister Type that each implementation implements. Resolve(Type, String, DependencyContainerResolveOptions) Attempts to resolve a named type using specified options and the supplied constructor parameters. Parameters are used in conjunction with normal container resolution to find the most suitable constructor (if one exists). All user supplied parameters must exist in at least one resolvable constructor of RegisterType or resolution will fail. Declaration public object Resolve(Type resolveType, string name = null, DependencyContainerResolveOptions options = null) Parameters Type Name Description Type resolveType Type to resolve. String name Name of registration. DependencyContainerResolveOptions options Resolution options. Returns Type Description Object Instance of type. Exceptions Type Condition DependencyContainerResolutionException Unable to resolve the type. Resolve<TResolveType>(String, DependencyContainerResolveOptions) Attempts to resolve a named type using specified options and the supplied constructor parameters. Parameters are used in conjunction with normal container resolution to find the most suitable constructor (if one exists). All user supplied parameters must exist in at least one resolvable constructor of RegisterType or resolution will fail. Declaration public TResolveType Resolve<TResolveType>(string name = null, DependencyContainerResolveOptions options = null) where TResolveType : class Parameters Type Name Description String name Name of registration. DependencyContainerResolveOptions options Resolution options. Returns Type Description TResolveType Instance of type. Type Parameters Name Description TResolveType Type to resolve. Exceptions Type Condition DependencyContainerResolutionException Unable to resolve the type. ResolveAll(Type, Boolean) Returns all registrations of a type. Declaration public IEnumerable<object> ResolveAll(Type resolveType, bool includeUnnamed = false) Parameters Type Name Description Type resolveType Type to resolveAll. Boolean includeUnnamed Whether to include un-named (default) registrations. Returns Type Description IEnumerable < Object > IEnumerable. ResolveAll<TResolveType>(Boolean) Returns all registrations of a type. Declaration public IEnumerable<TResolveType> ResolveAll<TResolveType>(bool includeUnnamed = true) where TResolveType : class Parameters Type Name Description Boolean includeUnnamed Whether to include un-named (default) registrations. Returns Type Description IEnumerable <TResolveType> IEnumerable. Type Parameters Name Description TResolveType Type to resolveAll. TryResolve(Type, DependencyContainerResolveOptions, out Object) Attempts to resolve a type using the given options. Declaration public bool TryResolve(Type resolveType, DependencyContainerResolveOptions options, out object resolvedType) Parameters Type Name Description Type resolveType Type to resolve. DependencyContainerResolveOptions options Resolution options. Object resolvedType Resolved type or default if resolve fails. Returns Type Description Boolean true if resolved successfully, false otherwise. TryResolve(Type, out Object) Attempts to resolve a type using the default options. Declaration public bool TryResolve(Type resolveType, out object resolvedType) Parameters Type Name Description Type resolveType Type to resolve. Object resolvedType Resolved type or default if resolve fails. Returns Type Description Boolean true if resolved successfully, false otherwise. TryResolve(Type, String, DependencyContainerResolveOptions, out Object) Attempts to resolve a type using the given options and name. Declaration public bool TryResolve(Type resolveType, string name, DependencyContainerResolveOptions options, out object resolvedType) Parameters Type Name Description Type resolveType Type to resolve. String name Name of registration. DependencyContainerResolveOptions options Resolution options. Object resolvedType Resolved type or default if resolve fails. Returns Type Description Boolean true if resolved successfully, false otherwise. TryResolve(Type, String, out Object) Attempts to resolve a type using the default options and given name. Declaration public bool TryResolve(Type resolveType, string name, out object resolvedType) Parameters Type Name Description Type resolveType Type to resolve. String name Name of registration. Object resolvedType Resolved type or default if resolve fails. Returns Type Description Boolean true if resolved successfully, false otherwise. TryResolve<TResolveType>(out TResolveType) Attempts to resolve a type using the default options. Declaration public bool TryResolve<TResolveType>(out TResolveType resolvedType) where TResolveType : class Parameters Type Name Description TResolveType resolvedType Resolved type or default if resolve fails. Returns Type Description Boolean true if resolved successfully, false otherwise. Type Parameters Name Description TResolveType Type to resolve. TryResolve<TResolveType>(DependencyContainerResolveOptions, out TResolveType) Attempts to resolve a type using the given options. Declaration public bool TryResolve<TResolveType>(DependencyContainerResolveOptions options, out TResolveType resolvedType) where TResolveType : class Parameters Type Name Description DependencyContainerResolveOptions options Resolution options. TResolveType resolvedType Resolved type or default if resolve fails. Returns Type Description Boolean true if resolved successfully, false otherwise. Type Parameters Name Description TResolveType Type to resolve. TryResolve<TResolveType>(String, out TResolveType) Attempts to resolve a type using the default options and given name. Declaration public bool TryResolve<TResolveType>(string name, out TResolveType resolvedType) where TResolveType : class Parameters Type Name Description String name Name of registration. TResolveType resolvedType Resolved type or default if resolve fails. Returns Type Description Boolean true if resolved successfully, false otherwise. Type Parameters Name Description TResolveType Type to resolve. TryResolve<TResolveType>(String, DependencyContainerResolveOptions, out TResolveType) Attempts to resolve a type using the given options and name. Declaration public bool TryResolve<TResolveType>(string name, DependencyContainerResolveOptions options, out TResolveType resolvedType) where TResolveType : class Parameters Type Name Description String name Name of registration. DependencyContainerResolveOptions options Resolution options. TResolveType resolvedType Resolved type or default if resolve fails. Returns Type Description Boolean true if resolved successfully, false otherwise. Type Parameters Name Description TResolveType Type to resolve. Unregister(Type, String) Remove a named container class registration. Declaration public bool Unregister(Type registerType, string name = \"\") Parameters Type Name Description Type registerType Type to unregister. String name Name of registration. Returns Type Description Boolean true if the registration is successfully found and removed; otherwise, false . Unregister<TRegister>(String) Remove a named container class registration. Declaration public bool Unregister<TRegister>(string name = \"\") Parameters Type Name Description String name Name of registration. Returns Type Description Boolean true if the registration is successfully found and removed; otherwise, false . Type Parameters Name Description TRegister Type to unregister. Implements System.IDisposable See Also IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.DelayProvider.html": {
    "href": "api/Swan.Components.DelayProvider.html",
    "title": "Class DelayProvider | Unosquare SWAN",
    "keywords": "Class DelayProvider Represents logic providing several delay mechanisms. Inheritance Object DelayProvider Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public sealed class DelayProvider : IDisposable Examples The following example shows how to implement delay mechanisms. using Swan.Components; public class Example { public static void Main() { // using the ThreadSleep strategy using (var delay = new DelayProvider(DelayProvider.DelayStrategy.ThreadSleep)) { // retrieve how much time was delayed var time = delay.WaitOne(); } } } Constructors DelayProvider(DelayProvider.DelayStrategy) Initializes a new instance of the DelayProvider class. Declaration public DelayProvider(DelayProvider.DelayStrategy strategy = DelayProvider.DelayStrategy.TaskDelay) Parameters Type Name Description DelayProvider.DelayStrategy strategy The strategy. Properties Strategy Gets the selected delay strategy. Declaration public DelayProvider.DelayStrategy Strategy { get; } Property Value Type Description DelayProvider.DelayStrategy Methods Dispose() Declaration public void Dispose() WaitOne() Creates the smallest possible, synchronous delay based on the selected strategy. Declaration public TimeSpan WaitOne() Returns Type Description TimeSpan The elapsed time of the delay. Implements System.IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.CsProjMetadataBase.html": {
    "href": "api/Swan.Components.CsProjMetadataBase.html",
    "title": "Class CsProjMetadataBase | Unosquare SWAN",
    "keywords": "Class CsProjMetadataBase Represents a CsProj metadata abstract class to use with CsProjFile parser. Inheritance Object CsProjMetadataBase Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public abstract class CsProjMetadataBase Properties AssemblyName Gets the name of the assembly. Declaration public string AssemblyName { get; } Property Value Type Description String The name of the assembly. LangVersion Gets the language version. Declaration public string LangVersion { get; } Property Value Type Description String The language version. PackageId Gets the package identifier. Declaration public string PackageId { get; } Property Value Type Description String The package identifier. TargetFramework Gets the target framework. Declaration public string TargetFramework { get; } Property Value Type Description String The target framework. TargetFrameworks Gets the target frameworks. Declaration public string TargetFrameworks { get; } Property Value Type Description String The target frameworks. Version Gets the version. Declaration public string Version { get; } Property Value Type Description String The version. Methods FindElement(String) Finds the element. Declaration protected XElement FindElement(string elementName) Parameters Type Name Description String elementName Name of the element. Returns Type Description XElement A XElement. ParseCsProjTags(ref String[]) Parses the cs proj tags. Declaration public abstract void ParseCsProjTags(ref string[] args) Parameters Type Name Description String [] args The arguments. SetData(XDocument) Sets the data. Declaration public void SetData(XDocument xmlDocument) Parameters Type Name Description XDocument xmlDocument The XML document. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.CircularBuffer.html": {
    "href": "api/Swan.Components.CircularBuffer.html",
    "title": "Class CircularBuffer | Unosquare SWAN",
    "keywords": "Class CircularBuffer A fixed-size buffer that acts as an infinite length one. This buffer is backed by unmanaged, very fast memory so ensure you call the dispose method when you are done using it. Only for Windows. Inheritance Object CircularBuffer Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public sealed class CircularBuffer : IDisposable Constructors CircularBuffer(Int32) Initializes a new instance of the CircularBuffer class. Declaration public CircularBuffer(int bufferLength) Parameters Type Name Description Int32 bufferLength Length of the buffer. Properties CapacityPercent Gets percentage of used bytes (readbale/available, from 0.0 to 1.0). Declaration public double CapacityPercent { get; } Property Value Type Description Double The capacity percent. Length Gets the capacity of this buffer. Declaration public int Length { get; } Property Value Type Description Int32 The length. ReadableCount Gets the available bytes to read. Declaration public int ReadableCount { get; } Property Value Type Description Int32 The readable count. ReadIndex Gets the current, 0-based read index. Declaration public int ReadIndex { get; } Property Value Type Description Int32 The index of the read. WritableCount Gets the number of bytes that can be written. Declaration public int WritableCount { get; } Property Value Type Description Int32 The writable count. WriteIndex Gets the current, 0-based write index. Declaration public int WriteIndex { get; } Property Value Type Description Int32 The index of the write. WriteTag Gets an the object associated with the last write. Declaration public TimeSpan WriteTag { get; } Property Value Type Description TimeSpan The write tag. Methods Clear() Resets all states as if this buffer had just been created. Declaration public void Clear() Dispose() Declaration public void Dispose() Read(Int32, Byte[], Int32) Reads the specified number of bytes into the target array. Declaration public void Read(int requestedBytes, byte[] target, int targetOffset) Parameters Type Name Description Int32 requestedBytes The requested bytes. Byte [] target The target. Int32 targetOffset The target offset. Exceptions Type Condition InvalidOperationException Exception that is thrown when a method call is invalid for the object's current state. Write(IntPtr, Int32, TimeSpan) Writes data to the backing buffer using the specified pointer and length. and associating a write tag for this operation. Declaration public void Write(IntPtr source, int length, TimeSpan writeTag) Parameters Type Name Description IntPtr source The source. Int32 length The length. TimeSpan writeTag The write tag. Exceptions Type Condition InvalidOperationException Unable to write to circular buffer. Call the Read method to make some additional room. Implements System.IDisposable See Also IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Abstractions.WorkerDelayProvider.html": {
    "href": "api/Swan.Abstractions.WorkerDelayProvider.html",
    "title": "Class WorkerDelayProvider | Unosquare SWAN",
    "keywords": "Class WorkerDelayProvider Represents a class that implements delay logic for thread workers. Inheritance Object WorkerDelayProvider Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Abstractions Syntax public static class WorkerDelayProvider Properties Default Gets the default delay provider. Declaration public static IWorkerDelayProvider Default { get; } Property Value Type Description IWorkerDelayProvider SteppedToken Provides a delay implementation which uses short delay intervals of 5ms and a wait on the delay task in the final loop. Declaration public static IWorkerDelayProvider SteppedToken { get; } Property Value Type Description IWorkerDelayProvider Token Provides a delay implementation which simply waits on the task and cancels on the cancellation token. Declaration public static IWorkerDelayProvider Token { get; } Property Value Type Description IWorkerDelayProvider TokenSleep Provides a delay implementation which uses short sleep intervals of 5ms. Declaration public static IWorkerDelayProvider TokenSleep { get; } Property Value Type Description IWorkerDelayProvider TokenTimeout Provides a delay implementation which waits on the task and cancels on both, the cancellation token and a wanted delay timeout. Declaration public static IWorkerDelayProvider TokenTimeout { get; } Property Value Type Description IWorkerDelayProvider Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Abstractions.WorkerBase.html": {
    "href": "api/Swan.Abstractions.WorkerBase.html",
    "title": "Class WorkerBase | Unosquare SWAN",
    "keywords": "Class WorkerBase Provides base infrastructure for Timer and Thread workers. Inheritance Object WorkerBase ThreadWorkerBase TimerWorkerBase Implements IDisposable Namespace : Swan.Abstractions Syntax public abstract class WorkerBase : IWorker, IDisposable Constructors WorkerBase(String, TimeSpan) Initializes a new instance of the WorkerBase class. Declaration protected WorkerBase(string name, TimeSpan period) Parameters Type Name Description String name The name. TimeSpan period The execution interval. Properties CycleCancellation Gets the cycle logic cancellation owner. Declaration protected CancellationTokenOwner CycleCancellation { get; } Property Value Type Description CancellationTokenOwner CycleCompletedEvent Gets the cycle completed event. Declaration protected ManualResetEventSlim CycleCompletedEvent { get; } Property Value Type Description ManualResetEventSlim CycleStopwatch Gets the cycle stopwatch. Declaration protected Stopwatch CycleStopwatch { get; } Property Value Type Description Stopwatch DefaultPeriod Gets the default period of 15 milliseconds which is the default precision for timers. Declaration protected static TimeSpan DefaultPeriod { get; } Property Value Type Description TimeSpan IsDisposed Declaration public bool IsDisposed { get; protected set; } Property Value Type Description Boolean IsDisposing Declaration public bool IsDisposing { get; protected set; } Property Value Type Description Boolean IsStopRequested Gets a value indicating whether stop has been requested. This is useful to prevent more requests from being issued. Declaration protected bool IsStopRequested { get; } Property Value Type Description Boolean Name Declaration public string Name { get; } Property Value Type Description String Period Declaration public TimeSpan Period { get; set; } Property Value Type Description TimeSpan StateChangedEvent Gets the state changed event. Declaration protected ManualResetEventSlim StateChangedEvent { get; } Property Value Type Description ManualResetEventSlim StateChangeRequests Gets the state change requests. Declaration protected Dictionary<WorkerBase.StateChangeRequest, bool> StateChangeRequests { get; } Property Value Type Description Dictionary < WorkerBase.StateChangeRequest , Boolean > StateChangeTask Gets or sets the state change task. Declaration protected Task<WorkerState> StateChangeTask { get; set; } Property Value Type Description Task < WorkerState > WorkerState Declaration public WorkerState WorkerState { get; protected set; } Property Value Type Description WorkerState Methods ComputeCycleDelay(WorkerState) Computes the cycle delay. Declaration protected int ComputeCycleDelay(WorkerState initialWorkerState) Parameters Type Name Description WorkerState initialWorkerState Initial state of the worker. Returns Type Description Int32 The number of milliseconds to delay for. Dispose() Declaration public void Dispose() Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. ExecuteCycleLogic(CancellationToken) Represents the user defined logic to be executed on a single worker cycle. Check the cancellation token continuously if you need responsive interrupts. Declaration protected abstract void ExecuteCycleLogic(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. OnCycleException(Exception) Handles the cycle logic exceptions. Declaration protected abstract void OnCycleException(Exception ex) Parameters Type Name Description Exception ex The exception that was thrown. OnDisposing() This method is called automatically when Dispose() is called. Makes sure you release all resources within this call. Declaration protected abstract void OnDisposing() OnStateChangeProcessed(WorkerState, WorkerState) Called when a state change request is processed. Declaration protected virtual void OnStateChangeProcessed(WorkerState previousState, WorkerState newState) Parameters Type Name Description WorkerState previousState The state before the change. WorkerState newState The new state. PauseAsync() Declaration public abstract Task<WorkerState> PauseAsync() Returns Type Description Task < WorkerState > ResumeAsync() Declaration public abstract Task<WorkerState> ResumeAsync() Returns Type Description Task < WorkerState > StartAsync() Declaration public abstract Task<WorkerState> StartAsync() Returns Type Description Task < WorkerState > StopAsync() Declaration public abstract Task<WorkerState> StopAsync() Returns Type Description Task < WorkerState > Implements System.IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Abstractions.TimerWorkerBase.html": {
    "href": "api/Swan.Abstractions.TimerWorkerBase.html",
    "title": "Class TimerWorkerBase | Unosquare SWAN",
    "keywords": "Class TimerWorkerBase Provides a base implementation for application workers. Inheritance Object WorkerBase TimerWorkerBase Implements IDisposable Inherited Members WorkerBase.Name WorkerBase.Period WorkerBase.WorkerState WorkerBase.IsDisposed WorkerBase.IsDisposing WorkerBase.DefaultPeriod WorkerBase.IsStopRequested WorkerBase.CycleStopwatch WorkerBase.StateChangeRequests WorkerBase.CycleCompletedEvent WorkerBase.StateChangedEvent WorkerBase.CycleCancellation WorkerBase.StateChangeTask WorkerBase.Dispose() WorkerBase.OnCycleException(Exception) WorkerBase.ExecuteCycleLogic(CancellationToken) WorkerBase.OnDisposing() WorkerBase.OnStateChangeProcessed(WorkerState, WorkerState) WorkerBase.ComputeCycleDelay(WorkerState) Namespace : Swan.Abstractions Syntax public abstract class TimerWorkerBase : WorkerBase, IDisposable Constructors TimerWorkerBase(String, TimeSpan) Initializes a new instance of the TimerWorkerBase class. Declaration protected TimerWorkerBase(string name, TimeSpan period) Parameters Type Name Description String name The name. TimeSpan period The execution interval. Methods Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Overrides WorkerBase.Dispose(Boolean) PauseAsync() Declaration public override Task<WorkerState> PauseAsync() Returns Type Description Task < WorkerState > Overrides WorkerBase.PauseAsync() ResumeAsync() Declaration public override Task<WorkerState> ResumeAsync() Returns Type Description Task < WorkerState > Overrides WorkerBase.ResumeAsync() ScheduleCycle(Int32) Schedules a new cycle for execution. The delay is given in milliseconds. Passing a delay of 0 means a new cycle should be executed immediately. Declaration protected void ScheduleCycle(int delay) Parameters Type Name Description Int32 delay The delay. StartAsync() Declaration public override Task<WorkerState> StartAsync() Returns Type Description Task < WorkerState > Overrides WorkerBase.StartAsync() StopAsync() Declaration public override Task<WorkerState> StopAsync() Returns Type Description Task < WorkerState > Overrides WorkerBase.StopAsync() Implements System.IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Abstractions.IEmailSender.html": {
    "href": "api/Swan.Abstractions.IEmailSender.html",
    "title": "Interface IEmailSender | Unosquare SWAN",
    "keywords": "Interface IEmailSender Represents an interface for e-mail sender. Namespace : Swan.Abstractions Syntax public interface IEmailSender Methods SendMessage(String, String, String) Sends the message. Declaration Task<bool> SendMessage(string recipient, string subject, string message) Parameters Type Name Description String recipient The recipient. String subject The subject. String message The message. Returns Type Description Task < Boolean > true if the message was sent, otherwise false . Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.html": {
    "href": "api/Swan.html",
    "title": "Namespace Swan | Unosquare SWAN",
    "keywords": "Namespace Swan Classes ConnectionAcceptedEventArgs The event arguments for when connections are accepted. ConnectionAcceptingEventArgs Occurs before a connection is accepted. Set the Cancel property to true to prevent the connection from being accepted. ConnectionDataReceivedEventArgs Event arguments for when data is received. ConnectionFailureEventArgs The event arguments for connection failure events. ConnectionListenerFailedEventArgs Event arguments for when a server listener fails to start. ConnectionListenerStartedEventArgs Event arguments for when a server listener is started. ConnectionListenerStoppedEventArgs Event arguments for when a server listener stopped. Network Provides miscellaneous network utilities such as a Public IP finder, a DNS client to query DNS records of any kind, and an NTP client. NetworkExtensions Provides various extension methods for networking-related tasks. SmtpExtensions Extension methods. WindowsServicesExtensions Extension methods. Enums ConnectionDataReceivedTrigger Enumerates the possible causes of the DataReceived event occurring. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.WindowsServicesExtensions.html": {
    "href": "api/Swan.WindowsServicesExtensions.html",
    "title": "Class WindowsServicesExtensions | Unosquare SWAN",
    "keywords": "Class WindowsServicesExtensions Extension methods. Inheritance Object WindowsServicesExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan Syntax public static class WindowsServicesExtensions Methods RunInConsoleMode(ServiceBase, String) Runs a service in console mode. Declaration public static void RunInConsoleMode(this ServiceBase this, string loggerSource = null) Parameters Type Name Description ServiceBase this The service to run. String loggerSource The logger source. Exceptions Type Condition ArgumentNullException this. RunInConsoleMode(ServiceBase[], String) Runs a set of services in console mode. Declaration public static void RunInConsoleMode(this ServiceBase[] this, string loggerSource = null) Parameters Type Name Description ServiceBase [] this The services to run. String loggerSource The logger source. Exceptions Type Condition ArgumentNullException this. InvalidOperationException The ServiceBase class isn't available. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.SmtpExtensions.html": {
    "href": "api/Swan.SmtpExtensions.html",
    "title": "Class SmtpExtensions | Unosquare SWAN",
    "keywords": "Class SmtpExtensions Extension methods. Inheritance Object SmtpExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan Syntax public static class SmtpExtensions Methods ToMimeMessage(MailMessage) The raw contents of this MailMessage as a MemoryStream. Declaration public static MemoryStream ToMimeMessage(this MailMessage this) Parameters Type Name Description MailMessage this The caller. Returns Type Description MemoryStream A MemoryStream with the raw contents of this MailMessage. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.html": {
    "href": "api/Swan.Networking.html",
    "title": "Namespace Swan.Networking | Unosquare SWAN",
    "keywords": "Namespace Swan.Networking Classes Connection Represents a network connection either on the server or on the client. It wraps a TcpClient and its corresponding network streams. It is capable of working in 2 modes. Typically on the server side you will need to enable continuous reading and events. On the client side you may want to disable continuous reading and use the Read methods available. In continuous reading mode Read methods are not available and will throw an invalid operation exceptions if they are used. Continuous Reading Mode: Subscribe to data reception events, it runs a background thread, don't use Read methods Manual Reading Mode: Data reception events are NEVER fired. No background threads are used. Use Read methods to receive data. ConnectionListener TCP Listener manager with built-in events and asynchronous functionality. This networking component is typically used when writing server software. DnsQueryException An exception thrown when the DNS query fails. DnsQueryResult Represents a response from a DNS server. DnsRecord Represents a DNS record entry. JsonClient Represents a HttpClient with extended methods to use with JSON payloads and bearer tokens authentication. JsonRequestException Represents errors that occurs requesting a JSON file through HTTP. SmtpClient Represents a basic SMTP client that is capable of submitting messages to an SMTP server. SmtpDefinitions Contains useful constants and definitions. SmtpDefinitions.SmtpAuthMethods Lists the AUTH methods supported by default. SmtpServerReply Represents an SMTP server response object. SmtpSessionState Represents the state of an SMTP session associated with a client. Enums DnsOperationCode Enumerates the different DNS operation codes. DnsRecordClass Enumerates the different DNS record classes. DnsRecordType Enumerates the different DNS record types. DnsResponseCode Enumerates the different DNS query response codes. SmtpCommandNames Enumerates all of the well-known SMTP command names. SmtpReplyCodeCategories Enumerates the reply code categories. SmtpReplyCodeSeverities Enumerates the reply code severities. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Networking.Connection.html": {
    "href": "api/Swan.Networking.Connection.html",
    "title": "Class Connection | Unosquare SWAN",
    "keywords": "Class Connection Represents a network connection either on the server or on the client. It wraps a TcpClient and its corresponding network streams. It is capable of working in 2 modes. Typically on the server side you will need to enable continuous reading and events. On the client side you may want to disable continuous reading and use the Read methods available. In continuous reading mode Read methods are not available and will throw an invalid operation exceptions if they are used. Continuous Reading Mode: Subscribe to data reception events, it runs a background thread, don't use Read methods Manual Reading Mode: Data reception events are NEVER fired. No background threads are used. Use Read methods to receive data. Inheritance Object Connection Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Networking Syntax public sealed class Connection : IDisposable Examples The following code explains how to create a TCP server. using System.Text; using Swan.Networking; class Example { static void Main() { // create a new connection listener on a specific port var connectionListener = new ConnectionListener(1337); // handle the OnConnectionAccepting event connectionListener.OnConnectionAccepted += async (s, e) => { // create a new connection using (var con = new Connection(e.Client)) { await con.WriteLineAsync(\"Hello world!\"); } }; connectionListener.Start(); Console.ReadLine)=ñ } } The following code describes how to create a TCP client. using System.Net.Sockets; using System.Text; using System.Threading.Tasks; using Swan.Networking; class Example { static async Task Main() { // create a new TcpClient object var client = new TcpClient(); // connect to a specific address and port client.Connect(\"localhost\", 1337); //create a new connection with specific encoding, //new line sequence and continuous reading disabled using (var cn = new Connection(client, Encoding.UTF8, \"\\r\\n\", true, 0)) { var response = await cn.ReadTextAsync(); } } } Constructors Connection(TcpClient) Initializes a new instance of the Connection class in continuous reading mode. It uses UTF8 encoding, CRLF as a new line sequence and disables a protocol block size. Declaration public Connection(TcpClient client) Parameters Type Name Description TcpClient client The client. Connection(TcpClient, Int32) Initializes a new instance of the Connection class in continuous reading mode. It uses UTF8 encoding, disables line sequences, and uses a protocol block size instead. Declaration public Connection(TcpClient client, int blockSize) Parameters Type Name Description TcpClient client The client. Int32 blockSize Size of the block. Connection(TcpClient, Encoding, String, Boolean, Int32) Initializes a new instance of the Connection class. Declaration public Connection(TcpClient client, Encoding textEncoding, string newLineSequence, bool disableContinuousReading, int blockSize) Parameters Type Name Description TcpClient client The client. Encoding textEncoding The text encoding. String newLineSequence The new line sequence used for read and write operations. Boolean disableContinuousReading if set to true [disable continuous reading]. Int32 blockSize Size of the block. -- set to 0 or less to disable. Properties ActiveStream Gets the active stream. Returns an SSL stream if the connection is secure, otherwise returns the underlying NetworkStream. Declaration public Stream ActiveStream { get; } Property Value Type Description Stream The active stream. ConnectionDuration Gets the duration of the connection. Declaration public TimeSpan ConnectionDuration { get; } Property Value Type Description TimeSpan The duration of the connection. ConnectionStartTime Gets the start time at which the connection was started in local time. Declaration public DateTime ConnectionStartTime { get; } Property Value Type Description DateTime The connection start time. ConnectionStartTimeUtc Gets the start time at which the connection was started in UTC. Declaration public DateTime ConnectionStartTimeUtc { get; } Property Value Type Description DateTime The connection start time UTC. DataReceivedIdleDuration Gets how long has elapsed since data was last received. Declaration public TimeSpan DataReceivedIdleDuration { get; } Property Value Type Description TimeSpan DataReceivedLastTimeUtc Gets the last time data was received at in UTC. Declaration public DateTime DataReceivedLastTimeUtc { get; } Property Value Type Description DateTime The data received last time UTC. DataSentIdleDuration Gets how long has elapsed since data was last sent. Declaration public TimeSpan DataSentIdleDuration { get; } Property Value Type Description TimeSpan The duration of the data sent idle. DataSentLastTimeUtc Gets the last time at which data was sent in UTC. Declaration public DateTime DataSentLastTimeUtc { get; } Property Value Type Description DateTime The data sent last time UTC. Id Gets the unique identifier of this connection. This field is filled out upon instantiation of this class. Declaration public Guid Id { get; } Property Value Type Description Guid The identifier. IsActiveStreamSecure Gets a value indicating whether the current connection stream is an SSL stream. Declaration public bool IsActiveStreamSecure { get; } Property Value Type Description Boolean true if this instance is active stream secure; otherwise, false . IsConnected Gets a value indicating whether this connection is connected. Remarks: This property polls the socket internally and checks if it is available to read data from it. If disconnect has been called, then this property will return false. Declaration public bool IsConnected { get; } Property Value Type Description Boolean true if this instance is connected; otherwise, false . IsContinuousReadingEnabled Gets a value indicating whether this connection is in continuous reading mode. Remark: Whenever a disconnect event occurs, the background thread is terminated and this property will return false whenever the reading thread is not active. Therefore, even if continuous reading was not disabled in the constructor, this property might return false. Declaration public bool IsContinuousReadingEnabled { get; } Property Value Type Description Boolean true if this instance is continuous reading enabled; otherwise, false . LocalEndPoint Gets the local end point of this TCP connection. Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint The local end point. ProtocolBlockSize When in continuous reading mode, and if set to greater than 0, a Data reception event will be fired whenever the amount of bytes determined by this property has been received. Useful for fixed-length message protocols. Declaration public int ProtocolBlockSize { get; } Property Value Type Description Int32 The size of the protocol block. RemoteClient Gets the remote client of this TCP connection. Declaration public TcpClient RemoteClient { get; } Property Value Type Description TcpClient The remote client. RemoteEndPoint Gets the remote end point of this TCP connection. Declaration public IPEndPoint RemoteEndPoint { get; } Property Value Type Description IPEndPoint The remote end point. TextEncoding Gets the text encoding for send and receive operations. Declaration public Encoding TextEncoding { get; } Property Value Type Description Encoding The text encoding. Methods Disconnect() Disconnects this connection. Declaration public void Disconnect() Dispose() Declaration public void Dispose() ReadDataAsync(CancellationToken) Reads data asynchronously from the remote stream with a 5000 millisecond timeout. Declaration public Task<byte[]> ReadDataAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Byte []> A byte array containing the results the specified sequence of bytes. ReadDataAsync(TimeSpan, CancellationToken) Reads data from the remote client asynchronously and with the given timeout. Declaration public Task<byte[]> ReadDataAsync(TimeSpan timeout, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TimeSpan timeout The timeout. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Byte []> A byte array containing the results of encoding the specified set of characters. Exceptions Type Condition InvalidOperationException Read methods have been disabled because continuous reading is enabled. TimeoutException Reading data from {ActiveStream} timed out in {timeout.TotalMilliseconds} m. ReadLineAsync(CancellationToken) Performs the same task as this method's overload but it defaults to a read timeout of 30 seconds. Declaration public Task<string> ReadLineAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > A task that represents the asynchronous read operation. The value of the TResult parameter contains the next line from the stream, or is null if all the characters have been read. ReadLineAsync(TimeSpan, CancellationToken) Reads the next available line of text in queue. Return null when no text is read. This method differs from the rest of the read methods because it keeps an internal queue of lines that are read from the stream and only returns the one line next in the queue. It is only recommended to use this method when you are working with text-based protocols and the rest of the read methods are not called. Declaration public Task<string> ReadLineAsync(TimeSpan timeout, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TimeSpan timeout The timeout. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > A task with a string line from the queue. Exceptions Type Condition InvalidOperationException Read methods have been disabled because continuous reading is enabled. ReadTextAsync(CancellationToken) Asynchronously reads data as text with a 5000 millisecond timeout. Declaration public Task<string> ReadTextAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > When this method completes successfully, it returns the contents of the file as a text string. ReadTextAsync(TimeSpan, CancellationToken) Asynchronously reads data as text with the given timeout. Declaration public Task<string> ReadTextAsync(TimeSpan timeout, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TimeSpan timeout The timeout. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > A String that contains the results of decoding the specified sequence of bytes. UpgradeToSecureAsClientAsync(String, RemoteCertificateValidationCallback) Upgrades the active stream to an SSL stream if this connection object is hosted in the client. Declaration public Task<bool> UpgradeToSecureAsClientAsync(string hostname = null, RemoteCertificateValidationCallback callback = null) Parameters Type Name Description String hostname The hostname. RemoteCertificateValidationCallback callback The callback. Returns Type Description Task < Boolean > A tasks with true if the upgrade to SSL was successful; otherwise, false . UpgradeToSecureAsServerAsync(X509Certificate2) Upgrades the active stream to an SSL stream if this connection object is hosted in the server. Declaration public Task<bool> UpgradeToSecureAsServerAsync(X509Certificate2 serverCertificate) Parameters Type Name Description X509Certificate2 serverCertificate The server certificate. Returns Type Description Task < Boolean > true if the object is hosted in the server; otherwise, false . WriteDataAsync(Byte[], Boolean, CancellationToken) Writes data asynchronously. Declaration public Task WriteDataAsync(byte[] buffer, bool forceFlush, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Byte [] buffer The buffer. Boolean forceFlush if set to true [force flush]. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task that represents the asynchronous write operation. WriteLineAsync(String, Encoding, CancellationToken) Writes a line of text asynchronously. The new line sequence is added automatically at the end of the line. Declaration public Task WriteLineAsync(string line, Encoding encoding, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String line The line. Encoding encoding The encoding. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task that represents the asynchronous write operation. WriteLineAsync(String, CancellationToken) Writes a line of text asynchronously. The new line sequence is added automatically at the end of the line. Declaration public Task WriteLineAsync(string line, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String line The line. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task that represents the asynchronous write operation. WriteTextAsync(String, Encoding, CancellationToken) Writes text asynchronously. Declaration public Task WriteTextAsync(string text, Encoding encoding, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String text The text. Encoding encoding The encoding. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task that represents the asynchronous write operation. WriteTextAsync(String, CancellationToken) Writes text asynchronously. Declaration public Task WriteTextAsync(string text, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String text The text. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task that represents the asynchronous write operation. Events ClientDisconnected Occurs when a client is disconnected Declaration public event EventHandler ClientDisconnected Event Type Type Description EventHandler ConnectionFailure Occurs when an error occurs while upgrading, sending, or receiving data in this client Declaration public event EventHandler<ConnectionFailureEventArgs> ConnectionFailure Event Type Type Description EventHandler < ConnectionFailureEventArgs > DataReceived Occurs when the receive buffer has encounters a new line sequence, the buffer is flushed or the buffer is full. Declaration public event EventHandler<ConnectionDataReceivedEventArgs> DataReceived Event Type Type Description EventHandler < ConnectionDataReceivedEventArgs > Implements System.IDisposable See Also IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.NetworkExtensions.html": {
    "href": "api/Swan.NetworkExtensions.html",
    "title": "Class NetworkExtensions | Unosquare SWAN",
    "keywords": "Class NetworkExtensions Provides various extension methods for networking-related tasks. Inheritance Object NetworkExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan Syntax public static class NetworkExtensions Methods IsPrivateAddress(IPAddress) Determines whether the IP address is private. Declaration public static bool IsPrivateAddress(this IPAddress this) Parameters Type Name Description IPAddress this The IP address. Returns Type Description Boolean True if the IP Address is private; otherwise, false. Exceptions Type Condition ArgumentNullException address. ToUInt32(IPAddress) Converts an IPv4 Address to its Unsigned, 32-bit integer representation. Declaration public static uint ToUInt32(this IPAddress this) Parameters Type Name Description IPAddress this The address. Returns Type Description UInt32 A 32-bit unsigned integer converted from four bytes at a specified position in a byte array. Exceptions Type Condition ArgumentNullException address. ArgumentException InterNetwork - address. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.ConnectionListenerStartedEventArgs.html": {
    "href": "api/Swan.ConnectionListenerStartedEventArgs.html",
    "title": "Class ConnectionListenerStartedEventArgs | Unosquare SWAN",
    "keywords": "Class ConnectionListenerStartedEventArgs Event arguments for when a server listener is started. Inheritance Object EventArgs ConnectionListenerStartedEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan Syntax public class ConnectionListenerStartedEventArgs : EventArgs Constructors ConnectionListenerStartedEventArgs(IPEndPoint) Initializes a new instance of the ConnectionListenerStartedEventArgs class. Declaration public ConnectionListenerStartedEventArgs(IPEndPoint listenerEndPoint) Parameters Type Name Description IPEndPoint listenerEndPoint The listener end point. Exceptions Type Condition ArgumentNullException listenerEndPoint. Properties EndPoint Gets the end point. Declaration public IPEndPoint EndPoint { get; } Property Value Type Description IPEndPoint The end point. See Also EventArgs Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.ConnectionListenerFailedEventArgs.html": {
    "href": "api/Swan.ConnectionListenerFailedEventArgs.html",
    "title": "Class ConnectionListenerFailedEventArgs | Unosquare SWAN",
    "keywords": "Class ConnectionListenerFailedEventArgs Event arguments for when a server listener fails to start. Inheritance Object EventArgs ConnectionListenerFailedEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan Syntax public class ConnectionListenerFailedEventArgs : EventArgs Constructors ConnectionListenerFailedEventArgs(IPEndPoint, Exception) Initializes a new instance of the ConnectionListenerFailedEventArgs class. Declaration public ConnectionListenerFailedEventArgs(IPEndPoint listenerEndPoint, Exception ex) Parameters Type Name Description IPEndPoint listenerEndPoint The listener end point. Exception ex The ex. Exceptions Type Condition ArgumentNullException listenerEndPoint or ex. Properties EndPoint Gets the end point. Declaration public IPEndPoint EndPoint { get; } Property Value Type Description IPEndPoint The end point. Error Gets the error. Declaration public Exception Error { get; } Property Value Type Description Exception The error. See Also EventArgs Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.ConnectionFailureEventArgs.html": {
    "href": "api/Swan.ConnectionFailureEventArgs.html",
    "title": "Class ConnectionFailureEventArgs | Unosquare SWAN",
    "keywords": "Class ConnectionFailureEventArgs The event arguments for connection failure events. Inheritance Object EventArgs ConnectionFailureEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan Syntax public class ConnectionFailureEventArgs : EventArgs Constructors ConnectionFailureEventArgs(Exception) Initializes a new instance of the ConnectionFailureEventArgs class. Declaration public ConnectionFailureEventArgs(Exception ex) Parameters Type Name Description Exception ex The ex. Properties Error Gets the error. Declaration public Exception Error { get; } Property Value Type Description Exception The error. See Also EventArgs Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.ConnectionDataReceivedTrigger.html": {
    "href": "api/Swan.ConnectionDataReceivedTrigger.html",
    "title": "Enum ConnectionDataReceivedTrigger | Unosquare SWAN",
    "keywords": "Enum ConnectionDataReceivedTrigger Enumerates the possible causes of the DataReceived event occurring. Namespace : Swan Syntax public enum ConnectionDataReceivedTrigger Fields Name Description BlockSizeReached The block size reached BufferFull The buffer was full Flush The trigger was a forceful flush of the buffer NewLineSequenceEncountered The new line sequence bytes were received Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.ConnectionAcceptedEventArgs.html": {
    "href": "api/Swan.ConnectionAcceptedEventArgs.html",
    "title": "Class ConnectionAcceptedEventArgs | Unosquare SWAN",
    "keywords": "Class ConnectionAcceptedEventArgs The event arguments for when connections are accepted. Inheritance Object EventArgs ConnectionAcceptedEventArgs ConnectionAcceptingEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan Syntax public class ConnectionAcceptedEventArgs : EventArgs Constructors ConnectionAcceptedEventArgs(TcpClient) Initializes a new instance of the ConnectionAcceptedEventArgs class. Declaration public ConnectionAcceptedEventArgs(TcpClient client) Parameters Type Name Description TcpClient client The client. Exceptions Type Condition ArgumentNullException client. Properties Client Gets the client. Declaration public TcpClient Client { get; } Property Value Type Description TcpClient The client. See Also EventArgs Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.html": {
    "href": "api/Swan.Components.html",
    "title": "Namespace Swan.Components | Unosquare SWAN",
    "keywords": "Namespace Swan.Components Classes CircularBuffer A fixed-size buffer that acts as an infinite length one. This buffer is backed by unmanaged, very fast memory so ensure you call the dispose method when you are done using it. Only for Windows. CsProjFile<T> Represents a CsProjFile (and FsProjFile) parser. CsProjMetadataBase Represents a CsProj metadata abstract class to use with CsProjFile parser. DelayProvider Represents logic providing several delay mechanisms. DependencyContainer The concrete implementation of a simple IoC container based largely on TinyIoC ( https://github.com/grumpydev/TinyIoC ). DependencyContainer.TypeRegistration Represents a Type Registration within the IoC Container. DependencyContainerRegistrationException Generic Constraint Registration Exception. DependencyContainerResolutionException An exception for dependency resolutions. DependencyContainerResolveOptions Resolution settings. DependencyContainerWeakReferenceException Weak Reference Exception. HighResolutionTimer Provides access to a high-resolution, time measuring device. MessageHub Messenger hub responsible for taking subscriptions/publications and delivering of messages. MessageHubDefaultProxy Default \"pass through\" proxy. Does nothing other than deliver the message. MessageHubGenericMessage<TContent> Generic message with user specified content. MessageHubMessageBase Base class for messages that provides weak reference storage of the sender. MessageHubSubscriptionToken Represents an active subscription to a message. MultiRegisterOptions Registration options for \"fluent\" API when registering multiple implementations. ObjectFactoryBase Represents an abstract class for Object Factory. ProcessResult Represents the text of the standard output and standard error of a process, including its exit code. ProcessRunner Provides methods to help create external processes, and efficiently capture the standard error and standard output streams. RegisterOptions Registration options for \"fluent\" API. TypesConcurrentDictionary Represents a Concurrent Dictionary for TypeRegistration. Interfaces IMessageHub Messenger hub responsible for taking subscriptions/publications and delivering of messages. IMessageHubMessage A Message to be published/delivered by Messenger. IMessageHubProxy Message proxy definition. A message proxy can be used to intercept/alter messages and/or marshal delivery actions onto a particular thread. IMessageHubSubscription Represents a message subscription. Enums DelayProvider.DelayStrategy Enumerates the different ways of providing delays. DependencyContainerDuplicateImplementationAction Enumerates duplicate definition actions. DependencyContainerNamedResolutionFailureAction Enumerates failure actions. DependencyContainerUnregisteredResolutionAction Defines Resolution actions. Delegates ProcessRunner.ProcessDataReceivedCallback Defines a delegate to handle binary data reception from the standard output or standard error streams from a process. TypesConcurrentDictionary.ObjectConstructor Represents a delegate to build an object with the parameters. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.MessageHubSubscriptionToken.html": {
    "href": "api/Swan.Components.MessageHubSubscriptionToken.html",
    "title": "Class MessageHubSubscriptionToken | Unosquare SWAN",
    "keywords": "Class MessageHubSubscriptionToken Represents an active subscription to a message. Inheritance Object MessageHubSubscriptionToken Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public sealed class MessageHubSubscriptionToken : IDisposable Constructors MessageHubSubscriptionToken(IMessageHub, Type) Initializes a new instance of the MessageHubSubscriptionToken class. Declaration public MessageHubSubscriptionToken(IMessageHub hub, Type messageType) Parameters Type Name Description IMessageHub hub The hub. Type messageType Type of the message. Exceptions Type Condition ArgumentNullException hub. ArgumentOutOfRangeException messageType. Methods Dispose() Declaration public void Dispose() Implements System.IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.MessageHubMessageBase.html": {
    "href": "api/Swan.Components.MessageHubMessageBase.html",
    "title": "Class MessageHubMessageBase | Unosquare SWAN",
    "keywords": "Class MessageHubMessageBase Base class for messages that provides weak reference storage of the sender. Inheritance Object MessageHubMessageBase MessageHubGenericMessage<TContent> Implements IMessageHubMessage Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Components Syntax public abstract class MessageHubMessageBase : IMessageHubMessage Constructors MessageHubMessageBase(Object) Initializes a new instance of the MessageHubMessageBase class. Declaration protected MessageHubMessageBase(object sender) Parameters Type Name Description Object sender The sender. Exceptions Type Condition ArgumentNullException sender. Properties Sender The sender of the message, or null if not supported by the message implementation. Declaration public object Sender { get; } Property Value Type Description Object Implements IMessageHubMessage Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.IMessageHub.html": {
    "href": "api/Swan.Components.IMessageHub.html",
    "title": "Interface IMessageHub | Unosquare SWAN",
    "keywords": "Interface IMessageHub Messenger hub responsible for taking subscriptions/publications and delivering of messages. Namespace : Swan.Components Syntax public interface IMessageHub Methods Publish<TMessage>(TMessage) Publish a message to any subscribers. Declaration void Publish<TMessage>(TMessage message) where TMessage : class, IMessageHubMessage Parameters Type Name Description TMessage message Message to deliver. Type Parameters Name Description TMessage Type of message. PublishAsync<TMessage>(TMessage) Publish a message to any subscribers asynchronously. Declaration Task PublishAsync<TMessage>(TMessage message) where TMessage : class, IMessageHubMessage Parameters Type Name Description TMessage message Message to deliver. Returns Type Description Task A task from Publish action. Type Parameters Name Description TMessage Type of message. Subscribe<TMessage>(Action<TMessage>, Boolean, IMessageHubProxy) Subscribe to a message type with the given destination and delivery action. Messages will be delivered via the specified proxy. All messages of this type will be delivered. Declaration MessageHubSubscriptionToken Subscribe<TMessage>(Action<TMessage> deliveryAction, bool useStrongReferences, IMessageHubProxy proxy) where TMessage : class, IMessageHubMessage Parameters Type Name Description Action <TMessage> deliveryAction Action to invoke when message is delivered. Boolean useStrongReferences Use strong references to destination and deliveryAction. IMessageHubProxy proxy Proxy to use when delivering the messages. Returns Type Description MessageHubSubscriptionToken MessageSubscription used to unsubscribing. Type Parameters Name Description TMessage Type of message. Subscribe<TMessage>(Action<TMessage>, Func<TMessage, Boolean>, Boolean, IMessageHubProxy) Subscribe to a message type with the given destination and delivery action with the given filter. Messages will be delivered via the specified proxy. All references are held with WeakReferences Only messages that \"pass\" the filter will be delivered. Declaration MessageHubSubscriptionToken Subscribe<TMessage>(Action<TMessage> deliveryAction, Func<TMessage, bool> messageFilter, bool useStrongReferences, IMessageHubProxy proxy) where TMessage : class, IMessageHubMessage Parameters Type Name Description Action <TMessage> deliveryAction Action to invoke when message is delivered. Func <TMessage, Boolean > messageFilter The message filter. Boolean useStrongReferences Use strong references to destination and deliveryAction. IMessageHubProxy proxy Proxy to use when delivering the messages. Returns Type Description MessageHubSubscriptionToken MessageSubscription used to unsubscribing. Type Parameters Name Description TMessage Type of message. Unsubscribe<TMessage>(MessageHubSubscriptionToken) Unsubscribe from a particular message type. Does not throw an exception if the subscription is not found. Declaration void Unsubscribe<TMessage>(MessageHubSubscriptionToken subscriptionToken) where TMessage : class, IMessageHubMessage Parameters Type Name Description MessageHubSubscriptionToken subscriptionToken Subscription token received from Subscribe. Type Parameters Name Description TMessage Type of message. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Components.HighResolutionTimer.html": {
    "href": "api/Swan.Components.HighResolutionTimer.html",
    "title": "Class HighResolutionTimer | Unosquare SWAN",
    "keywords": "Class HighResolutionTimer Provides access to a high-resolution, time measuring device. Inheritance Object HighResolutionTimer Namespace : Swan.Components Syntax public class HighResolutionTimer : Stopwatch Constructors HighResolutionTimer() Initializes a new instance of the HighResolutionTimer class. Declaration public HighResolutionTimer() Exceptions Type Condition NotSupportedException High-resolution timer not available. Properties ElapsedMicroseconds Gets the elapsed microseconds. Declaration public long ElapsedMicroseconds { get; } Property Value Type Description Int64 MicrosecondsPerTick Gets the number of microseconds per timer tick. Declaration public static double MicrosecondsPerTick { get; } Property Value Type Description Double Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  }
}